{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","dependencies":[{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip2\\package.json","includedInParent":true,"mtime":1669629467207},{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip2\\.babelrc","includedInParent":true,"mtime":1669629456382},{"name":"@tensorflow/tfjs-core","loc":{"line":56,"column":17},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip2\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\tensors_to_detections.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip2\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.convertToDetections = exports.tensorsToDetections = void 0;\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\n/**\r\n * Convert result Tensors from object detection models into Detection boxes.\r\n *\r\n * @param detectionTensors List of Tensors of type Float32. The list of tensors\r\n *     can have 2 or 3 tensors. First tensor is the predicted raw\r\n *     boxes/keypoints. The size of the values must be\r\n *     (num_boxes * num_predicted_values). Second tensor is the score tensor.\r\n *     The size of the valuse must be (num_boxes * num_classes). It's optional\r\n *     to pass in a third tensor for anchors (e.g. for SSD models) depend on the\r\n *     outputs of the detection model. The size of anchor tensor must be\r\n *     (num_boxes * 4).\r\n * @param anchor A tensor for anchors. The size of anchor tensor must be\r\n *     (num_boxes * 4).\r\n * @param config\r\n */\r\nfunction tensorsToDetections(detectionTensors, anchor, config) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var rawScoreTensor, rawBoxTensor, boxes, normalizedScore, outputDetections;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    rawScoreTensor = detectionTensors[0];\r\n                    rawBoxTensor = detectionTensors[1];\r\n                    boxes = decodeBoxes(rawBoxTensor, anchor, config);\r\n                    normalizedScore = tf.tidy(function () {\r\n                        var normalizedScore = rawScoreTensor;\r\n                        if (config.sigmoidScore) {\r\n                            if (config.scoreClippingThresh != null) {\r\n                                normalizedScore = tf.clipByValue(rawScoreTensor, -config.scoreClippingThresh, config.scoreClippingThresh);\r\n                            }\r\n                            normalizedScore = tf.sigmoid(normalizedScore);\r\n                            return normalizedScore;\r\n                        }\r\n                        return normalizedScore;\r\n                    });\r\n                    return [4 /*yield*/, convertToDetections(boxes, normalizedScore, config)];\r\n                case 1:\r\n                    outputDetections = _a.sent();\r\n                    tf.dispose([boxes, normalizedScore]);\r\n                    return [2 /*return*/, outputDetections];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.tensorsToDetections = tensorsToDetections;\r\nfunction convertToDetections(detectionBoxes, detectionScore, config) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var outputDetections, detectionBoxesData, detectionScoresData, i, boxOffset, detection, bbox, locationData, totalIdx, kpId, keypointIndex, keypoint;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    outputDetections = [];\r\n                    return [4 /*yield*/, detectionBoxes.data()];\r\n                case 1:\r\n                    detectionBoxesData = _a.sent();\r\n                    return [4 /*yield*/, detectionScore.data()];\r\n                case 2:\r\n                    detectionScoresData = _a.sent();\r\n                    for (i = 0; i < config.numBoxes; ++i) {\r\n                        if (config.minScoreThresh != null &&\r\n                            detectionScoresData[i] < config.minScoreThresh) {\r\n                            continue;\r\n                        }\r\n                        boxOffset = i * config.numCoords;\r\n                        detection = convertToDetection(detectionBoxesData[boxOffset + 0] /* boxYMin */, detectionBoxesData[boxOffset + 1] /* boxXMin */, detectionBoxesData[boxOffset + 2] /* boxYMax */, detectionBoxesData[boxOffset + 3] /* boxXMax */, detectionScoresData[i], config.flipVertically, i);\r\n                        bbox = detection.locationData.relativeBoundingBox;\r\n                        if (bbox.width < 0 || bbox.height < 0) {\r\n                            // Decoded detection boxes could have negative values for width/height\r\n                            // due to model prediction. Filter out those boxes since some\r\n                            // downstream calculators may assume non-negative values.\r\n                            continue;\r\n                        }\r\n                        // Add keypoints.\r\n                        if (config.numKeypoints > 0) {\r\n                            locationData = detection.locationData;\r\n                            locationData.relativeKeypoints = [];\r\n                            totalIdx = config.numKeypoints * config.numValuesPerKeypoint;\r\n                            for (kpId = 0; kpId < totalIdx; kpId += config.numValuesPerKeypoint) {\r\n                                keypointIndex = boxOffset + config.keypointCoordOffset + kpId;\r\n                                keypoint = {\r\n                                    x: detectionBoxesData[keypointIndex + 0],\r\n                                    y: config.flipVertically ? 1 - detectionBoxesData[keypointIndex + 1] :\r\n                                        detectionBoxesData[keypointIndex + 1]\r\n                                };\r\n                                locationData.relativeKeypoints.push(keypoint);\r\n                            }\r\n                        }\r\n                        outputDetections.push(detection);\r\n                    }\r\n                    return [2 /*return*/, outputDetections];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.convertToDetections = convertToDetections;\r\nfunction convertToDetection(boxYMin, boxXMin, boxYMax, boxXMax, score, flipVertically, i) {\r\n    return {\r\n        score: [score],\r\n        ind: i,\r\n        locationData: {\r\n            relativeBoundingBox: {\r\n                xMin: boxXMin,\r\n                yMin: flipVertically ? 1 - boxYMax : boxYMin,\r\n                xMax: boxXMax,\r\n                yMax: flipVertically ? 1 - boxYMin : boxYMax,\r\n                width: boxXMax - boxXMin,\r\n                height: boxYMax - boxYMin\r\n            }\r\n        }\r\n    };\r\n}\r\n//[xCenter, yCenter, w, h, kp1, kp2, kp3, kp4]\r\n//[yMin, xMin, yMax, xMax, kpX, kpY, kpX, kpY]\r\nfunction decodeBoxes(rawBoxes, anchor, config) {\r\n    return tf.tidy(function () {\r\n        var yCenter;\r\n        var xCenter;\r\n        var h;\r\n        var w;\r\n        if (config.reverseOutputOrder) {\r\n            // Shape [numOfBoxes, 1].\r\n            xCenter = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 0], [-1, 1]));\r\n            yCenter = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 1], [-1, 1]));\r\n            w = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 2], [-1, 1]));\r\n            h = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 3], [-1, 1]));\r\n        }\r\n        else {\r\n            yCenter = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 0], [-1, 1]));\r\n            xCenter = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 1], [-1, 1]));\r\n            h = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 2], [-1, 1]));\r\n            w = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 3], [-1, 1]));\r\n        }\r\n        xCenter =\r\n            tf.add(tf.mul(tf.div(xCenter, config.xScale), anchor.w), anchor.x);\r\n        yCenter =\r\n            tf.add(tf.mul(tf.div(yCenter, config.yScale), anchor.h), anchor.y);\r\n        if (config.applyExponentialOnBoxSize) {\r\n            h = tf.mul(tf.exp(tf.div(h, config.hScale)), anchor.h);\r\n            w = tf.mul(tf.exp(tf.div(w, config.wScale)), anchor.w);\r\n        }\r\n        else {\r\n            h = tf.mul(tf.div(h, config.hScale), anchor.h);\r\n            w = tf.mul(tf.div(w, config.wScale), anchor.h);\r\n        }\r\n        var yMin = tf.sub(yCenter, tf.div(h, 2));\r\n        var xMin = tf.sub(xCenter, tf.div(w, 2));\r\n        var yMax = tf.add(yCenter, tf.div(h, 2));\r\n        var xMax = tf.add(xCenter, tf.div(w, 2));\r\n        // Shape [numOfBoxes, 4].\r\n        var boxes = tf.concat([\r\n            tf.reshape(yMin, [config.numBoxes, 1]),\r\n            tf.reshape(xMin, [config.numBoxes, 1]),\r\n            tf.reshape(yMax, [config.numBoxes, 1]),\r\n            tf.reshape(xMax, [config.numBoxes, 1])\r\n        ], 1);\r\n        if (config.numKeypoints) {\r\n            for (var k = 0; k < config.numKeypoints; ++k) {\r\n                var keypointOffset = config.keypointCoordOffset + k * config.numValuesPerKeypoint;\r\n                var keypointX = void 0;\r\n                var keypointY = void 0;\r\n                if (config.reverseOutputOrder) {\r\n                    keypointX =\r\n                        tf.squeeze(tf.slice(rawBoxes, [0, keypointOffset], [-1, 1]));\r\n                    keypointY =\r\n                        tf.squeeze(tf.slice(rawBoxes, [0, keypointOffset + 1], [-1, 1]));\r\n                }\r\n                else {\r\n                    keypointY =\r\n                        tf.squeeze(tf.slice(rawBoxes, [0, keypointOffset], [-1, 1]));\r\n                    keypointX =\r\n                        tf.squeeze(tf.slice(rawBoxes, [0, keypointOffset + 1], [-1, 1]));\r\n                }\r\n                var keypointXNormalized = tf.add(tf.mul(tf.div(keypointX, config.xScale), anchor.w), anchor.x);\r\n                var keypointYNormalized = tf.add(tf.mul(tf.div(keypointY, config.yScale), anchor.h), anchor.y);\r\n                boxes = tf.concat([\r\n                    boxes, tf.reshape(keypointXNormalized, [config.numBoxes, 1]),\r\n                    tf.reshape(keypointYNormalized, [config.numBoxes, 1])\r\n                ], 1);\r\n            }\r\n        }\r\n        // Shape [numOfBoxes, 4] || [numOfBoxes, 12].\r\n        return boxes;\r\n    });\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}}],"sources":{"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_detections.js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.convertToDetections = exports.tensorsToDetections = void 0;\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\n/**\r\n * Convert result Tensors from object detection models into Detection boxes.\r\n *\r\n * @param detectionTensors List of Tensors of type Float32. The list of tensors\r\n *     can have 2 or 3 tensors. First tensor is the predicted raw\r\n *     boxes/keypoints. The size of the values must be\r\n *     (num_boxes * num_predicted_values). Second tensor is the score tensor.\r\n *     The size of the valuse must be (num_boxes * num_classes). It's optional\r\n *     to pass in a third tensor for anchors (e.g. for SSD models) depend on the\r\n *     outputs of the detection model. The size of anchor tensor must be\r\n *     (num_boxes * 4).\r\n * @param anchor A tensor for anchors. The size of anchor tensor must be\r\n *     (num_boxes * 4).\r\n * @param config\r\n */\r\nfunction tensorsToDetections(detectionTensors, anchor, config) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var rawScoreTensor, rawBoxTensor, boxes, normalizedScore, outputDetections;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    rawScoreTensor = detectionTensors[0];\r\n                    rawBoxTensor = detectionTensors[1];\r\n                    boxes = decodeBoxes(rawBoxTensor, anchor, config);\r\n                    normalizedScore = tf.tidy(function () {\r\n                        var normalizedScore = rawScoreTensor;\r\n                        if (config.sigmoidScore) {\r\n                            if (config.scoreClippingThresh != null) {\r\n                                normalizedScore = tf.clipByValue(rawScoreTensor, -config.scoreClippingThresh, config.scoreClippingThresh);\r\n                            }\r\n                            normalizedScore = tf.sigmoid(normalizedScore);\r\n                            return normalizedScore;\r\n                        }\r\n                        return normalizedScore;\r\n                    });\r\n                    return [4 /*yield*/, convertToDetections(boxes, normalizedScore, config)];\r\n                case 1:\r\n                    outputDetections = _a.sent();\r\n                    tf.dispose([boxes, normalizedScore]);\r\n                    return [2 /*return*/, outputDetections];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.tensorsToDetections = tensorsToDetections;\r\nfunction convertToDetections(detectionBoxes, detectionScore, config) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var outputDetections, detectionBoxesData, detectionScoresData, i, boxOffset, detection, bbox, locationData, totalIdx, kpId, keypointIndex, keypoint;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    outputDetections = [];\r\n                    return [4 /*yield*/, detectionBoxes.data()];\r\n                case 1:\r\n                    detectionBoxesData = _a.sent();\r\n                    return [4 /*yield*/, detectionScore.data()];\r\n                case 2:\r\n                    detectionScoresData = _a.sent();\r\n                    for (i = 0; i < config.numBoxes; ++i) {\r\n                        if (config.minScoreThresh != null &&\r\n                            detectionScoresData[i] < config.minScoreThresh) {\r\n                            continue;\r\n                        }\r\n                        boxOffset = i * config.numCoords;\r\n                        detection = convertToDetection(detectionBoxesData[boxOffset + 0] /* boxYMin */, detectionBoxesData[boxOffset + 1] /* boxXMin */, detectionBoxesData[boxOffset + 2] /* boxYMax */, detectionBoxesData[boxOffset + 3] /* boxXMax */, detectionScoresData[i], config.flipVertically, i);\r\n                        bbox = detection.locationData.relativeBoundingBox;\r\n                        if (bbox.width < 0 || bbox.height < 0) {\r\n                            // Decoded detection boxes could have negative values for width/height\r\n                            // due to model prediction. Filter out those boxes since some\r\n                            // downstream calculators may assume non-negative values.\r\n                            continue;\r\n                        }\r\n                        // Add keypoints.\r\n                        if (config.numKeypoints > 0) {\r\n                            locationData = detection.locationData;\r\n                            locationData.relativeKeypoints = [];\r\n                            totalIdx = config.numKeypoints * config.numValuesPerKeypoint;\r\n                            for (kpId = 0; kpId < totalIdx; kpId += config.numValuesPerKeypoint) {\r\n                                keypointIndex = boxOffset + config.keypointCoordOffset + kpId;\r\n                                keypoint = {\r\n                                    x: detectionBoxesData[keypointIndex + 0],\r\n                                    y: config.flipVertically ? 1 - detectionBoxesData[keypointIndex + 1] :\r\n                                        detectionBoxesData[keypointIndex + 1]\r\n                                };\r\n                                locationData.relativeKeypoints.push(keypoint);\r\n                            }\r\n                        }\r\n                        outputDetections.push(detection);\r\n                    }\r\n                    return [2 /*return*/, outputDetections];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.convertToDetections = convertToDetections;\r\nfunction convertToDetection(boxYMin, boxXMin, boxYMax, boxXMax, score, flipVertically, i) {\r\n    return {\r\n        score: [score],\r\n        ind: i,\r\n        locationData: {\r\n            relativeBoundingBox: {\r\n                xMin: boxXMin,\r\n                yMin: flipVertically ? 1 - boxYMax : boxYMin,\r\n                xMax: boxXMax,\r\n                yMax: flipVertically ? 1 - boxYMin : boxYMax,\r\n                width: boxXMax - boxXMin,\r\n                height: boxYMax - boxYMin\r\n            }\r\n        }\r\n    };\r\n}\r\n//[xCenter, yCenter, w, h, kp1, kp2, kp3, kp4]\r\n//[yMin, xMin, yMax, xMax, kpX, kpY, kpX, kpY]\r\nfunction decodeBoxes(rawBoxes, anchor, config) {\r\n    return tf.tidy(function () {\r\n        var yCenter;\r\n        var xCenter;\r\n        var h;\r\n        var w;\r\n        if (config.reverseOutputOrder) {\r\n            // Shape [numOfBoxes, 1].\r\n            xCenter = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 0], [-1, 1]));\r\n            yCenter = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 1], [-1, 1]));\r\n            w = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 2], [-1, 1]));\r\n            h = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 3], [-1, 1]));\r\n        }\r\n        else {\r\n            yCenter = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 0], [-1, 1]));\r\n            xCenter = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 1], [-1, 1]));\r\n            h = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 2], [-1, 1]));\r\n            w = tf.squeeze(tf.slice(rawBoxes, [0, config.boxCoordOffset + 3], [-1, 1]));\r\n        }\r\n        xCenter =\r\n            tf.add(tf.mul(tf.div(xCenter, config.xScale), anchor.w), anchor.x);\r\n        yCenter =\r\n            tf.add(tf.mul(tf.div(yCenter, config.yScale), anchor.h), anchor.y);\r\n        if (config.applyExponentialOnBoxSize) {\r\n            h = tf.mul(tf.exp(tf.div(h, config.hScale)), anchor.h);\r\n            w = tf.mul(tf.exp(tf.div(w, config.wScale)), anchor.w);\r\n        }\r\n        else {\r\n            h = tf.mul(tf.div(h, config.hScale), anchor.h);\r\n            w = tf.mul(tf.div(w, config.wScale), anchor.h);\r\n        }\r\n        var yMin = tf.sub(yCenter, tf.div(h, 2));\r\n        var xMin = tf.sub(xCenter, tf.div(w, 2));\r\n        var yMax = tf.add(yCenter, tf.div(h, 2));\r\n        var xMax = tf.add(xCenter, tf.div(w, 2));\r\n        // Shape [numOfBoxes, 4].\r\n        var boxes = tf.concat([\r\n            tf.reshape(yMin, [config.numBoxes, 1]),\r\n            tf.reshape(xMin, [config.numBoxes, 1]),\r\n            tf.reshape(yMax, [config.numBoxes, 1]),\r\n            tf.reshape(xMax, [config.numBoxes, 1])\r\n        ], 1);\r\n        if (config.numKeypoints) {\r\n            for (var k = 0; k < config.numKeypoints; ++k) {\r\n                var keypointOffset = config.keypointCoordOffset + k * config.numValuesPerKeypoint;\r\n                var keypointX = void 0;\r\n                var keypointY = void 0;\r\n                if (config.reverseOutputOrder) {\r\n                    keypointX =\r\n                        tf.squeeze(tf.slice(rawBoxes, [0, keypointOffset], [-1, 1]));\r\n                    keypointY =\r\n                        tf.squeeze(tf.slice(rawBoxes, [0, keypointOffset + 1], [-1, 1]));\r\n                }\r\n                else {\r\n                    keypointY =\r\n                        tf.squeeze(tf.slice(rawBoxes, [0, keypointOffset], [-1, 1]));\r\n                    keypointX =\r\n                        tf.squeeze(tf.slice(rawBoxes, [0, keypointOffset + 1], [-1, 1]));\r\n                }\r\n                var keypointXNormalized = tf.add(tf.mul(tf.div(keypointX, config.xScale), anchor.w), anchor.x);\r\n                var keypointYNormalized = tf.add(tf.mul(tf.div(keypointY, config.yScale), anchor.h), anchor.y);\r\n                boxes = tf.concat([\r\n                    boxes, tf.reshape(keypointXNormalized, [config.numBoxes, 1]),\r\n                    tf.reshape(keypointYNormalized, [config.numBoxes, 1])\r\n                ], 1);\r\n            }\r\n        }\r\n        // Shape [numOfBoxes, 4] || [numOfBoxes, 12].\r\n        return boxes;\r\n    });\r\n}\r\n"},"lineCount":241}},"error":null,"hash":"ccebb79501958b8f30b962913d06dfdd","cacheData":{"env":{}}}