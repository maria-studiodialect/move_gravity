{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","dependencies":[{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\package.json","includedInParent":true,"mtime":1669629467207},{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\.babelrc","includedInParent":true,"mtime":1669629456382},{"name":"@tensorflow/tfjs-core","loc":{"line":20,"column":17},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\convert_image_to_tensor.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"},{"name":"./get_rotated_sub_rect_to_rect_transformation_matrix","loc":{"line":21,"column":67},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\convert_image_to_tensor.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\get_rotated_sub_rect_to_rect_transformation_matrix.js"},{"name":"./image_utils","loc":{"line":22,"column":28},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\convert_image_to_tensor.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\image_utils.js"},{"name":"./shift_image_value","loc":{"line":23,"column":34},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\convert_image_to_tensor.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\shift_image_value.js"}],"generated":{"js":"\"use strict\";\r\nexports.__esModule = true;\r\nexports.convertImageToTensor = void 0;\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar get_rotated_sub_rect_to_rect_transformation_matrix_1 = require(\"./get_rotated_sub_rect_to_rect_transformation_matrix\");\r\nvar image_utils_1 = require(\"./image_utils\");\r\nvar shift_image_value_1 = require(\"./shift_image_value\");\r\n/**\r\n * Convert an image or part of it to an image tensor.\r\n *\r\n * @param image An image, video frame or image tensor.\r\n * @param config\r\n *      inputResolution: The target height and width.\r\n *      keepAspectRatio?: Whether target tensor should keep aspect ratio.\r\n * @param normRect A normalized rectangle, representing the subarea to crop from\r\n *      the image. If normRect is provided, the returned image tensor represents\r\n *      the subarea.\r\n * @returns A map with the following properties:\r\n *     - imageTensor\r\n *     - padding: Padding ratio of left, top, right, bottom, based on the output\r\n * dimensions.\r\n *     - transformationMatrix: Projective transform matrix used to transform\r\n * input image to transformed image.\r\n */\r\nfunction convertImageToTensor(image, config, normRect) {\r\n    var outputTensorSize = config.outputTensorSize, keepAspectRatio = config.keepAspectRatio, borderMode = config.borderMode, outputTensorFloatRange = config.outputTensorFloatRange;\r\n    // Ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/calculators/tensor/image_to_tensor_calculator.cc\r\n    var imageSize = (0, image_utils_1.getImageSize)(image);\r\n    var roi = (0, image_utils_1.getRoi)(imageSize, normRect);\r\n    var padding = (0, image_utils_1.padRoi)(roi, outputTensorSize, keepAspectRatio);\r\n    var transformationMatrix = (0, get_rotated_sub_rect_to_rect_transformation_matrix_1.getRotatedSubRectToRectTransformMatrix)(roi, imageSize.width, imageSize.height, false);\r\n    var imageTensor = tf.tidy(function () {\r\n        var $image = (0, image_utils_1.toImageTensor)(image);\r\n        var transformMatrix = tf.tensor2d((0, image_utils_1.getProjectiveTransformMatrix)(transformationMatrix, imageSize, outputTensorSize), [1, 8]);\r\n        var fillMode = borderMode === 'zero' ? 'constant' : 'nearest';\r\n        var imageTransformed = tf.image.transform(\r\n        // tslint:disable-next-line: no-unnecessary-type-assertion\r\n        tf.expandDims(tf.cast($image, 'float32')), transformMatrix, 'bilinear', fillMode, 0, [outputTensorSize.height, outputTensorSize.width]);\r\n        var imageShifted = outputTensorFloatRange != null ?\r\n            (0, shift_image_value_1.shiftImageValue)(imageTransformed, outputTensorFloatRange) :\r\n            imageTransformed;\r\n        return imageShifted;\r\n    });\r\n    return { imageTensor: imageTensor, padding: padding, transformationMatrix: transformationMatrix };\r\n}\r\nexports.convertImageToTensor = convertImageToTensor;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"node_modules/@tensorflow-models/pose-detection/shared/calculators/convert_image_to_tensor.js":"\"use strict\";\r\nexports.__esModule = true;\r\nexports.convertImageToTensor = void 0;\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar get_rotated_sub_rect_to_rect_transformation_matrix_1 = require(\"./get_rotated_sub_rect_to_rect_transformation_matrix\");\r\nvar image_utils_1 = require(\"./image_utils\");\r\nvar shift_image_value_1 = require(\"./shift_image_value\");\r\n/**\r\n * Convert an image or part of it to an image tensor.\r\n *\r\n * @param image An image, video frame or image tensor.\r\n * @param config\r\n *      inputResolution: The target height and width.\r\n *      keepAspectRatio?: Whether target tensor should keep aspect ratio.\r\n * @param normRect A normalized rectangle, representing the subarea to crop from\r\n *      the image. If normRect is provided, the returned image tensor represents\r\n *      the subarea.\r\n * @returns A map with the following properties:\r\n *     - imageTensor\r\n *     - padding: Padding ratio of left, top, right, bottom, based on the output\r\n * dimensions.\r\n *     - transformationMatrix: Projective transform matrix used to transform\r\n * input image to transformed image.\r\n */\r\nfunction convertImageToTensor(image, config, normRect) {\r\n    var outputTensorSize = config.outputTensorSize, keepAspectRatio = config.keepAspectRatio, borderMode = config.borderMode, outputTensorFloatRange = config.outputTensorFloatRange;\r\n    // Ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/calculators/tensor/image_to_tensor_calculator.cc\r\n    var imageSize = (0, image_utils_1.getImageSize)(image);\r\n    var roi = (0, image_utils_1.getRoi)(imageSize, normRect);\r\n    var padding = (0, image_utils_1.padRoi)(roi, outputTensorSize, keepAspectRatio);\r\n    var transformationMatrix = (0, get_rotated_sub_rect_to_rect_transformation_matrix_1.getRotatedSubRectToRectTransformMatrix)(roi, imageSize.width, imageSize.height, false);\r\n    var imageTensor = tf.tidy(function () {\r\n        var $image = (0, image_utils_1.toImageTensor)(image);\r\n        var transformMatrix = tf.tensor2d((0, image_utils_1.getProjectiveTransformMatrix)(transformationMatrix, imageSize, outputTensorSize), [1, 8]);\r\n        var fillMode = borderMode === 'zero' ? 'constant' : 'nearest';\r\n        var imageTransformed = tf.image.transform(\r\n        // tslint:disable-next-line: no-unnecessary-type-assertion\r\n        tf.expandDims(tf.cast($image, 'float32')), transformMatrix, 'bilinear', fillMode, 0, [outputTensorSize.height, outputTensorSize.width]);\r\n        var imageShifted = outputTensorFloatRange != null ?\r\n            (0, shift_image_value_1.shiftImageValue)(imageTransformed, outputTensorFloatRange) :\r\n            imageTransformed;\r\n        return imageShifted;\r\n    });\r\n    return { imageTensor: imageTensor, padding: padding, transformationMatrix: transformationMatrix };\r\n}\r\nexports.convertImageToTensor = convertImageToTensor;\r\n"},"lineCount":64}},"error":null,"hash":"508c3fcb870e15f2205178598c6af52c","cacheData":{"env":{}}}