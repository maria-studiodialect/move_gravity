{"id":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","dependencies":[{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip\\package.json","includedInParent":true,"mtime":1669629467207},{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip\\.babelrc","includedInParent":true,"mtime":1669629456382},{"name":"../constants","loc":{"line":56,"column":26},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\decode_multiple_poses.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\constants.js"},{"name":"./build_part_with_score_queue","loc":{"line":57,"column":44},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\decode_multiple_poses.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\build_part_with_score_queue.js"},{"name":"./decode_multiple_poses_util","loc":{"line":58,"column":43},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\decode_multiple_poses.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\decode_multiple_poses_util.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.decodeMultiplePoses = void 0;\r\nvar constants_1 = require(\"../constants\");\r\nvar build_part_with_score_queue_1 = require(\"./build_part_with_score_queue\");\r\nvar decode_multiple_poses_util_1 = require(\"./decode_multiple_poses_util\");\r\n/**\r\n * Detects multiple poses and finds their parts from part scores and\r\n * displacement vectors. It returns up to `maxDetections` object instance\r\n * detections in decreasing root score order. It works as follows: We first\r\n * create a priority queue with local part score maxima above\r\n * `scoreThreshold`, considering all parts at the same time. Then we\r\n * iteratively pull the top  element of the queue (in decreasing score order)\r\n * and treat it as a root candidate for a new object instance. To avoid\r\n * duplicate detections, we reject the root candidate if it is within a disk\r\n * of `nmsRadius` pixels from the corresponding part of a previously detected\r\n * instance, which is a form of part-based non-maximum suppression (NMS). If\r\n * the root candidate passes the NMS check, we start a new object instance\r\n * detection, treating the corresponding part as root and finding the\r\n * positions of the remaining parts by following the displacement vectors\r\n * along the tree-structured part graph. We assign to the newly detected\r\n * instance a score equal to the sum of scores of its parts which have not\r\n * been claimed by a previous instance (i.e., those at least `nmsRadius`\r\n * pixels away from the corresponding part of all previously detected\r\n * instances), divided by the total number of parts `numParts`.\r\n *\r\n * @param heatmapScores 3-D tensor with shape `[height, width, numParts]`.\r\n * The value of heatmapScores[y, x, k]` is the score of placing the `k`-th\r\n * object part at position `(y, x)`.\r\n *\r\n * @param offsets 3-D tensor with shape `[height, width, numParts * 2]`.\r\n * The value of [offsets[y, x, k], offsets[y, x, k + numParts]]` is the\r\n * short range offset vector of the `k`-th  object part at heatmap\r\n * position `(y, x)`.\r\n *\r\n * @param displacementsFwd 3-D tensor of shape\r\n * `[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\r\n * number of edges (parent-child pairs) in the tree. It contains the forward\r\n * displacements between consecutive part from the root towards the leaves.\r\n *\r\n * @param displacementsBwd 3-D tensor of shape\r\n * `[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\r\n * number of edges (parent-child pairs) in the tree. It contains the backward\r\n * displacements between consecutive part from the root towards the leaves.\r\n *\r\n * @param outputStride The output stride that was used when feed-forwarding\r\n * through the PoseNet model.  Must be 32, 16, or 8.\r\n *\r\n * @param maxPoseDetections Maximum number of returned instance detections per\r\n * image.\r\n *\r\n * @param scoreThreshold Only return instance detections that have root part\r\n * score greater or equal to this value. Defaults to 0.5.\r\n *\r\n * @param nmsRadius Non-maximum suppression part distance. It needs to be\r\n * strictly positive. Two parts suppress each other if they are less than\r\n * `nmsRadius` pixels away. Defaults to 20.\r\n *\r\n * @return An array of poses and their scores, each containing keypoints and\r\n * the corresponding keypoint scores.\r\n */\r\nfunction decodeMultiplePoses(heatmapScores, offsets, displacementFwd, displacementBwd, outputStride, maxPoseDetections, scoreThreshold, nmsRadius) {\r\n    if (scoreThreshold === void 0) { scoreThreshold = 0.5; }\r\n    if (nmsRadius === void 0) { nmsRadius = 20; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, scoresBuffer, offsetsBuffer, displacementsFwdBuffer, displacementsBwdBuffer, poses, queue, squaredNmsRadius, root, rootImageCoords, keypoints, score;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, (0, decode_multiple_poses_util_1.toTensorBuffers3D)([heatmapScores, offsets, displacementFwd, displacementBwd])];\r\n                case 1:\r\n                    _a = _b.sent(), scoresBuffer = _a[0], offsetsBuffer = _a[1], displacementsFwdBuffer = _a[2], displacementsBwdBuffer = _a[3];\r\n                    poses = [];\r\n                    queue = (0, build_part_with_score_queue_1.buildPartWithScoreQueue)(scoreThreshold, constants_1.K_LOCAL_MAXIMUM_RADIUS, scoresBuffer);\r\n                    squaredNmsRadius = nmsRadius * nmsRadius;\r\n                    // Generate at most maxDetections object instances per image in\r\n                    // decreasing root part score order.\r\n                    while (poses.length < maxPoseDetections && !queue.empty()) {\r\n                        root = queue.dequeue();\r\n                        rootImageCoords = (0, decode_multiple_poses_util_1.getImageCoords)(root.part, outputStride, offsetsBuffer);\r\n                        if ((0, decode_multiple_poses_util_1.withinNmsRadiusOfCorrespondingPoint)(poses, squaredNmsRadius, rootImageCoords, root.part.id)) {\r\n                            continue;\r\n                        }\r\n                        keypoints = (0, decode_multiple_poses_util_1.decodePose)(root, scoresBuffer, offsetsBuffer, outputStride, displacementsFwdBuffer, displacementsBwdBuffer);\r\n                        score = (0, decode_multiple_poses_util_1.getInstanceScore)(poses, squaredNmsRadius, keypoints);\r\n                        poses.push({ keypoints: keypoints, score: score });\r\n                    }\r\n                    return [2 /*return*/, poses];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.decodeMultiplePoses = decodeMultiplePoses;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}}],"sources":{"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.decodeMultiplePoses = void 0;\r\nvar constants_1 = require(\"../constants\");\r\nvar build_part_with_score_queue_1 = require(\"./build_part_with_score_queue\");\r\nvar decode_multiple_poses_util_1 = require(\"./decode_multiple_poses_util\");\r\n/**\r\n * Detects multiple poses and finds their parts from part scores and\r\n * displacement vectors. It returns up to `maxDetections` object instance\r\n * detections in decreasing root score order. It works as follows: We first\r\n * create a priority queue with local part score maxima above\r\n * `scoreThreshold`, considering all parts at the same time. Then we\r\n * iteratively pull the top  element of the queue (in decreasing score order)\r\n * and treat it as a root candidate for a new object instance. To avoid\r\n * duplicate detections, we reject the root candidate if it is within a disk\r\n * of `nmsRadius` pixels from the corresponding part of a previously detected\r\n * instance, which is a form of part-based non-maximum suppression (NMS). If\r\n * the root candidate passes the NMS check, we start a new object instance\r\n * detection, treating the corresponding part as root and finding the\r\n * positions of the remaining parts by following the displacement vectors\r\n * along the tree-structured part graph. We assign to the newly detected\r\n * instance a score equal to the sum of scores of its parts which have not\r\n * been claimed by a previous instance (i.e., those at least `nmsRadius`\r\n * pixels away from the corresponding part of all previously detected\r\n * instances), divided by the total number of parts `numParts`.\r\n *\r\n * @param heatmapScores 3-D tensor with shape `[height, width, numParts]`.\r\n * The value of heatmapScores[y, x, k]` is the score of placing the `k`-th\r\n * object part at position `(y, x)`.\r\n *\r\n * @param offsets 3-D tensor with shape `[height, width, numParts * 2]`.\r\n * The value of [offsets[y, x, k], offsets[y, x, k + numParts]]` is the\r\n * short range offset vector of the `k`-th  object part at heatmap\r\n * position `(y, x)`.\r\n *\r\n * @param displacementsFwd 3-D tensor of shape\r\n * `[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\r\n * number of edges (parent-child pairs) in the tree. It contains the forward\r\n * displacements between consecutive part from the root towards the leaves.\r\n *\r\n * @param displacementsBwd 3-D tensor of shape\r\n * `[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\r\n * number of edges (parent-child pairs) in the tree. It contains the backward\r\n * displacements between consecutive part from the root towards the leaves.\r\n *\r\n * @param outputStride The output stride that was used when feed-forwarding\r\n * through the PoseNet model.  Must be 32, 16, or 8.\r\n *\r\n * @param maxPoseDetections Maximum number of returned instance detections per\r\n * image.\r\n *\r\n * @param scoreThreshold Only return instance detections that have root part\r\n * score greater or equal to this value. Defaults to 0.5.\r\n *\r\n * @param nmsRadius Non-maximum suppression part distance. It needs to be\r\n * strictly positive. Two parts suppress each other if they are less than\r\n * `nmsRadius` pixels away. Defaults to 20.\r\n *\r\n * @return An array of poses and their scores, each containing keypoints and\r\n * the corresponding keypoint scores.\r\n */\r\nfunction decodeMultiplePoses(heatmapScores, offsets, displacementFwd, displacementBwd, outputStride, maxPoseDetections, scoreThreshold, nmsRadius) {\r\n    if (scoreThreshold === void 0) { scoreThreshold = 0.5; }\r\n    if (nmsRadius === void 0) { nmsRadius = 20; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, scoresBuffer, offsetsBuffer, displacementsFwdBuffer, displacementsBwdBuffer, poses, queue, squaredNmsRadius, root, rootImageCoords, keypoints, score;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, (0, decode_multiple_poses_util_1.toTensorBuffers3D)([heatmapScores, offsets, displacementFwd, displacementBwd])];\r\n                case 1:\r\n                    _a = _b.sent(), scoresBuffer = _a[0], offsetsBuffer = _a[1], displacementsFwdBuffer = _a[2], displacementsBwdBuffer = _a[3];\r\n                    poses = [];\r\n                    queue = (0, build_part_with_score_queue_1.buildPartWithScoreQueue)(scoreThreshold, constants_1.K_LOCAL_MAXIMUM_RADIUS, scoresBuffer);\r\n                    squaredNmsRadius = nmsRadius * nmsRadius;\r\n                    // Generate at most maxDetections object instances per image in\r\n                    // decreasing root part score order.\r\n                    while (poses.length < maxPoseDetections && !queue.empty()) {\r\n                        root = queue.dequeue();\r\n                        rootImageCoords = (0, decode_multiple_poses_util_1.getImageCoords)(root.part, outputStride, offsetsBuffer);\r\n                        if ((0, decode_multiple_poses_util_1.withinNmsRadiusOfCorrespondingPoint)(poses, squaredNmsRadius, rootImageCoords, root.part.id)) {\r\n                            continue;\r\n                        }\r\n                        keypoints = (0, decode_multiple_poses_util_1.decodePose)(root, scoresBuffer, offsetsBuffer, outputStride, displacementsFwdBuffer, displacementsBwdBuffer);\r\n                        score = (0, decode_multiple_poses_util_1.getInstanceScore)(poses, squaredNmsRadius, keypoints);\r\n                        poses.push({ keypoints: keypoints, score: score });\r\n                    }\r\n                    return [2 /*return*/, poses];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.decodeMultiplePoses = decodeMultiplePoses;\r\n"},"lineCount":145}},"error":null,"hash":"a15414842a5559294db7cbfb0dd04e7d","cacheData":{"env":{}}}