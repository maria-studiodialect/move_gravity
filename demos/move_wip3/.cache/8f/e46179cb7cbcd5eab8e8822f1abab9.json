{"id":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","dependencies":[{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\package.json","includedInParent":true,"mtime":1669629467207},{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\.babelrc","includedInParent":true,"mtime":1669629456382},{"name":"@tensorflow/tfjs-core","loc":{"line":31,"column":17},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector_utils.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"},{"name":"./constants","loc":{"line":32,"column":26},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector_utils.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\move_wip3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\constants.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nexports.validateEstimationConfig = exports.assertValidResolution = exports.assertValidOutputStride = exports.validateModelConfig = void 0;\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar constants_1 = require(\"./constants\");\r\nfunction validateModelConfig(modelConfig) {\r\n    var config = modelConfig || constants_1.MOBILENET_V1_CONFIG;\r\n    if (config.architecture == null) {\r\n        config.architecture = 'MobileNetV1';\r\n    }\r\n    if (constants_1.VALID_ARCHITECTURE.indexOf(config.architecture) < 0) {\r\n        throw new Error(\"Invalid architecture \".concat(config.architecture, \". \") +\r\n            \"Should be one of \".concat(constants_1.VALID_ARCHITECTURE));\r\n    }\r\n    if (config.inputResolution == null) {\r\n        config.inputResolution = { height: 257, width: 257 };\r\n    }\r\n    if (config.outputStride == null) {\r\n        config.outputStride = 16;\r\n    }\r\n    if (constants_1.VALID_STRIDE[config.architecture].indexOf(config.outputStride) < 0) {\r\n        throw new Error(\"Invalid outputStride \".concat(config.outputStride, \". \") +\r\n            \"Should be one of \".concat(constants_1.VALID_STRIDE[config.architecture], \" \") +\r\n            \"for architecture \".concat(config.architecture, \".\"));\r\n    }\r\n    if (config.multiplier == null) {\r\n        config.multiplier = 1.0;\r\n    }\r\n    if (constants_1.VALID_MULTIPLIER[config.architecture].indexOf(config.multiplier) < 0) {\r\n        throw new Error(\"Invalid multiplier \".concat(config.multiplier, \". \") +\r\n            \"Should be one of \".concat(constants_1.VALID_MULTIPLIER[config.architecture], \" \") +\r\n            \"for architecture \".concat(config.architecture, \".\"));\r\n    }\r\n    if (config.quantBytes == null) {\r\n        config.quantBytes = 4;\r\n    }\r\n    if (constants_1.VALID_QUANT_BYTES.indexOf(config.quantBytes) < 0) {\r\n        throw new Error(\"Invalid quantBytes \".concat(config.quantBytes, \". \") +\r\n            \"Should be one of \".concat(constants_1.VALID_QUANT_BYTES, \" \") +\r\n            \"for architecture \".concat(config.architecture, \".\"));\r\n    }\r\n    if (config.architecture === 'MobileNetV1' && config.outputStride === 32 &&\r\n        config.multiplier !== 1) {\r\n        throw new Error(\"When using an output stride of 32, \" +\r\n            \"you must select 1 as the multiplier.\");\r\n    }\r\n    return config;\r\n}\r\nexports.validateModelConfig = validateModelConfig;\r\nfunction assertValidOutputStride(outputStride) {\r\n    tf.util.assert(constants_1.VALID_OUTPUT_STRIDES.indexOf(outputStride) >= 0, function () { return \"outputStride of \".concat(outputStride, \" is invalid. \") +\r\n        \"It must be either 8 or 16.\"; });\r\n}\r\nexports.assertValidOutputStride = assertValidOutputStride;\r\nfunction isValidInputResolution(resolution, outputStride) {\r\n    return (resolution - 1) % outputStride === 0;\r\n}\r\nfunction assertValidResolution(resolution, outputStride) {\r\n    tf.util.assert(isValidInputResolution(resolution.height, outputStride), function () { return \"height of \".concat(resolution.height, \" is invalid for output stride \") +\r\n        \"\".concat(outputStride, \".\"); });\r\n    tf.util.assert(isValidInputResolution(resolution.width, outputStride), function () { return \"width of \".concat(resolution.width, \" is invalid for output stride \") +\r\n        \"\".concat(outputStride, \".\"); });\r\n}\r\nexports.assertValidResolution = assertValidResolution;\r\nfunction validateEstimationConfig(estimationConfig) {\r\n    var config = estimationConfig;\r\n    if (config.maxPoses == null) {\r\n        config.maxPoses = 1;\r\n    }\r\n    if (config.maxPoses <= 0) {\r\n        throw new Error(\"Invalid maxPoses \".concat(config.maxPoses, \". Should be > 0.\"));\r\n    }\r\n    if (config.maxPoses > 1) {\r\n        // Multi-poses estimation, needs additional check for multi-poses\r\n        // parameters.\r\n        config = __assign(__assign({}, constants_1.MULTI_PERSON_ESTIMATION_CONFIG), config);\r\n        if (config.scoreThreshold < 0.0 || config.scoreThreshold > 1.0) {\r\n            throw new Error(\"Invalid scoreThreshold \".concat(config.scoreThreshold, \". \") +\r\n                \"Should be in range [0.0, 1.0]\");\r\n        }\r\n        if (config.nmsRadius <= 0) {\r\n            throw new Error(\"Invalid nmsRadius \".concat(config.nmsRadius, \".\"));\r\n        }\r\n    }\r\n    return config;\r\n}\r\nexports.validateEstimationConfig = validateEstimationConfig;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"node_modules/@tensorflow-models/pose-detection/posenet/detector_utils.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nexports.validateEstimationConfig = exports.assertValidResolution = exports.assertValidOutputStride = exports.validateModelConfig = void 0;\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar constants_1 = require(\"./constants\");\r\nfunction validateModelConfig(modelConfig) {\r\n    var config = modelConfig || constants_1.MOBILENET_V1_CONFIG;\r\n    if (config.architecture == null) {\r\n        config.architecture = 'MobileNetV1';\r\n    }\r\n    if (constants_1.VALID_ARCHITECTURE.indexOf(config.architecture) < 0) {\r\n        throw new Error(\"Invalid architecture \".concat(config.architecture, \". \") +\r\n            \"Should be one of \".concat(constants_1.VALID_ARCHITECTURE));\r\n    }\r\n    if (config.inputResolution == null) {\r\n        config.inputResolution = { height: 257, width: 257 };\r\n    }\r\n    if (config.outputStride == null) {\r\n        config.outputStride = 16;\r\n    }\r\n    if (constants_1.VALID_STRIDE[config.architecture].indexOf(config.outputStride) < 0) {\r\n        throw new Error(\"Invalid outputStride \".concat(config.outputStride, \". \") +\r\n            \"Should be one of \".concat(constants_1.VALID_STRIDE[config.architecture], \" \") +\r\n            \"for architecture \".concat(config.architecture, \".\"));\r\n    }\r\n    if (config.multiplier == null) {\r\n        config.multiplier = 1.0;\r\n    }\r\n    if (constants_1.VALID_MULTIPLIER[config.architecture].indexOf(config.multiplier) < 0) {\r\n        throw new Error(\"Invalid multiplier \".concat(config.multiplier, \". \") +\r\n            \"Should be one of \".concat(constants_1.VALID_MULTIPLIER[config.architecture], \" \") +\r\n            \"for architecture \".concat(config.architecture, \".\"));\r\n    }\r\n    if (config.quantBytes == null) {\r\n        config.quantBytes = 4;\r\n    }\r\n    if (constants_1.VALID_QUANT_BYTES.indexOf(config.quantBytes) < 0) {\r\n        throw new Error(\"Invalid quantBytes \".concat(config.quantBytes, \". \") +\r\n            \"Should be one of \".concat(constants_1.VALID_QUANT_BYTES, \" \") +\r\n            \"for architecture \".concat(config.architecture, \".\"));\r\n    }\r\n    if (config.architecture === 'MobileNetV1' && config.outputStride === 32 &&\r\n        config.multiplier !== 1) {\r\n        throw new Error(\"When using an output stride of 32, \" +\r\n            \"you must select 1 as the multiplier.\");\r\n    }\r\n    return config;\r\n}\r\nexports.validateModelConfig = validateModelConfig;\r\nfunction assertValidOutputStride(outputStride) {\r\n    tf.util.assert(constants_1.VALID_OUTPUT_STRIDES.indexOf(outputStride) >= 0, function () { return \"outputStride of \".concat(outputStride, \" is invalid. \") +\r\n        \"It must be either 8 or 16.\"; });\r\n}\r\nexports.assertValidOutputStride = assertValidOutputStride;\r\nfunction isValidInputResolution(resolution, outputStride) {\r\n    return (resolution - 1) % outputStride === 0;\r\n}\r\nfunction assertValidResolution(resolution, outputStride) {\r\n    tf.util.assert(isValidInputResolution(resolution.height, outputStride), function () { return \"height of \".concat(resolution.height, \" is invalid for output stride \") +\r\n        \"\".concat(outputStride, \".\"); });\r\n    tf.util.assert(isValidInputResolution(resolution.width, outputStride), function () { return \"width of \".concat(resolution.width, \" is invalid for output stride \") +\r\n        \"\".concat(outputStride, \".\"); });\r\n}\r\nexports.assertValidResolution = assertValidResolution;\r\nfunction validateEstimationConfig(estimationConfig) {\r\n    var config = estimationConfig;\r\n    if (config.maxPoses == null) {\r\n        config.maxPoses = 1;\r\n    }\r\n    if (config.maxPoses <= 0) {\r\n        throw new Error(\"Invalid maxPoses \".concat(config.maxPoses, \". Should be > 0.\"));\r\n    }\r\n    if (config.maxPoses > 1) {\r\n        // Multi-poses estimation, needs additional check for multi-poses\r\n        // parameters.\r\n        config = __assign(__assign({}, constants_1.MULTI_PERSON_ESTIMATION_CONFIG), config);\r\n        if (config.scoreThreshold < 0.0 || config.scoreThreshold > 1.0) {\r\n            throw new Error(\"Invalid scoreThreshold \".concat(config.scoreThreshold, \". \") +\r\n                \"Should be in range [0.0, 1.0]\");\r\n        }\r\n        if (config.nmsRadius <= 0) {\r\n            throw new Error(\"Invalid nmsRadius \".concat(config.nmsRadius, \".\"));\r\n        }\r\n    }\r\n    return config;\r\n}\r\nexports.validateEstimationConfig = validateEstimationConfig;\r\n"},"lineCount":115}},"error":null,"hash":"569c120a72bbf7c179b391dca8d2879d","cacheData":{"env":{}}}