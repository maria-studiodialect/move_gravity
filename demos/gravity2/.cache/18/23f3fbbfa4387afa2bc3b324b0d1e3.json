{"id":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","dependencies":[{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity2\\package.json","includedInParent":true,"mtime":1669629456377},{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity2\\.babelrc","includedInParent":true,"mtime":1669629444948}],"generated":{"js":"\"use strict\";\r\nexports.__esModule = true;\r\nexports.LowPassFilter = void 0;\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n/**\r\n * A stateful filter that smoothes values overtime.\r\n *\r\n * More specifically, it stores the previous value, and when there's a new\r\n * value, a coefficient 'alpha' is applied to the new value, and `1 - alpha` is\r\n * applied to the previous value. The smaller the alpha is, the smoother result\r\n * and the bigger lag.\r\n */\r\n// ref:\r\n// https://github.com/google/mediapipe/blob/master/mediapipe/util/filtering/low_pass_filter.cc\r\nvar LowPassFilter = /** @class */ (function () {\r\n    function LowPassFilter(alpha) {\r\n        this.alpha = alpha;\r\n        this.initialized = false;\r\n    }\r\n    LowPassFilter.prototype.apply = function (value, threshold) {\r\n        var result;\r\n        if (this.initialized) {\r\n            if (threshold == null) {\r\n                // Regular lowpass filter.\r\n                // result = this.alpha * value + (1 - this.alpha) * this.storedValue;\r\n                result = this.storedValue + this.alpha * (value - this.storedValue);\r\n            }\r\n            else {\r\n                // We need to reformat the formula to be able to conveniently apply\r\n                // another optional non-linear function to the\r\n                // (value - this.storedValue) part.\r\n                // Add additional non-linearity to cap extreme value.\r\n                // More specifically, assume x = (value - this.storedValue), when x is\r\n                // close zero, the derived x is close to x, when x is several magnitudes\r\n                // larger, the drived x grows much slower then x. It behaves like\r\n                // sign(x)log(abs(x)).\r\n                result = this.storedValue +\r\n                    this.alpha * threshold *\r\n                        Math.asinh((value - this.storedValue) / threshold);\r\n            }\r\n        }\r\n        else {\r\n            result = value;\r\n            this.initialized = true;\r\n        }\r\n        this.rawValue = value;\r\n        this.storedValue = result;\r\n        return result;\r\n    };\r\n    LowPassFilter.prototype.applyWithAlpha = function (value, alpha, threshold) {\r\n        this.alpha = alpha;\r\n        return this.apply(value, threshold);\r\n    };\r\n    LowPassFilter.prototype.hasLastRawValue = function () {\r\n        return this.initialized;\r\n    };\r\n    LowPassFilter.prototype.lastRawValue = function () {\r\n        return this.rawValue;\r\n    };\r\n    LowPassFilter.prototype.reset = function () {\r\n        this.initialized = false;\r\n    };\r\n    return LowPassFilter;\r\n}());\r\nexports.LowPassFilter = LowPassFilter;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}}],"sources":{"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js":"\"use strict\";\r\nexports.__esModule = true;\r\nexports.LowPassFilter = void 0;\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n/**\r\n * A stateful filter that smoothes values overtime.\r\n *\r\n * More specifically, it stores the previous value, and when there's a new\r\n * value, a coefficient 'alpha' is applied to the new value, and `1 - alpha` is\r\n * applied to the previous value. The smaller the alpha is, the smoother result\r\n * and the bigger lag.\r\n */\r\n// ref:\r\n// https://github.com/google/mediapipe/blob/master/mediapipe/util/filtering/low_pass_filter.cc\r\nvar LowPassFilter = /** @class */ (function () {\r\n    function LowPassFilter(alpha) {\r\n        this.alpha = alpha;\r\n        this.initialized = false;\r\n    }\r\n    LowPassFilter.prototype.apply = function (value, threshold) {\r\n        var result;\r\n        if (this.initialized) {\r\n            if (threshold == null) {\r\n                // Regular lowpass filter.\r\n                // result = this.alpha * value + (1 - this.alpha) * this.storedValue;\r\n                result = this.storedValue + this.alpha * (value - this.storedValue);\r\n            }\r\n            else {\r\n                // We need to reformat the formula to be able to conveniently apply\r\n                // another optional non-linear function to the\r\n                // (value - this.storedValue) part.\r\n                // Add additional non-linearity to cap extreme value.\r\n                // More specifically, assume x = (value - this.storedValue), when x is\r\n                // close zero, the derived x is close to x, when x is several magnitudes\r\n                // larger, the drived x grows much slower then x. It behaves like\r\n                // sign(x)log(abs(x)).\r\n                result = this.storedValue +\r\n                    this.alpha * threshold *\r\n                        Math.asinh((value - this.storedValue) / threshold);\r\n            }\r\n        }\r\n        else {\r\n            result = value;\r\n            this.initialized = true;\r\n        }\r\n        this.rawValue = value;\r\n        this.storedValue = result;\r\n        return result;\r\n    };\r\n    LowPassFilter.prototype.applyWithAlpha = function (value, alpha, threshold) {\r\n        this.alpha = alpha;\r\n        return this.apply(value, threshold);\r\n    };\r\n    LowPassFilter.prototype.hasLastRawValue = function () {\r\n        return this.initialized;\r\n    };\r\n    LowPassFilter.prototype.lastRawValue = function () {\r\n        return this.rawValue;\r\n    };\r\n    LowPassFilter.prototype.reset = function () {\r\n        this.initialized = false;\r\n    };\r\n    return LowPassFilter;\r\n}());\r\nexports.LowPassFilter = LowPassFilter;\r\n"},"lineCount":81}},"error":null,"hash":"598b89541b66bb3d41cf8b3349b4fc89","cacheData":{"env":{}}}