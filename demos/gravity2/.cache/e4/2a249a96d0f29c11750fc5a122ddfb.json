{"id":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","dependencies":[{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity2\\package.json","includedInParent":true,"mtime":1669629456377},{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity2\\.babelrc","includedInParent":true,"mtime":1669629444948},{"name":"../../constants","loc":{"line":40,"column":26},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity2\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\decode_multiple_poses_util.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity2\\node_modules\\@tensorflow-models\\pose-detection\\constants.js"},{"name":"../constants","loc":{"line":41,"column":26},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity2\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\decode_multiple_poses_util.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity2\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\constants.js"}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.getInstanceScore = exports.decodePose = exports.addVectors = exports.withinNmsRadiusOfCorrespondingPoint = exports.squaredDistance = exports.getImageCoords = exports.getOffsetPoint = exports.toTensorBuffers3D = void 0;\r\nvar constants_1 = require(\"../../constants\");\r\nvar constants_2 = require(\"../constants\");\r\nfunction toTensorBuffers3D(tensors) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, Promise.all(tensors.map(function (tensor) { return tensor.buffer(); }))];\r\n        });\r\n    });\r\n}\r\nexports.toTensorBuffers3D = toTensorBuffers3D;\r\nfunction getOffsetPoint(y, x, keypoint, offsets) {\r\n    return {\r\n        y: offsets.get(y, x, keypoint),\r\n        x: offsets.get(y, x, keypoint + constants_2.NUM_KEYPOINTS)\r\n    };\r\n}\r\nexports.getOffsetPoint = getOffsetPoint;\r\nfunction getImageCoords(part, outputStride, offsets) {\r\n    var heatmapY = part.heatmapY, heatmapX = part.heatmapX, keypoint = part.id;\r\n    var _a = getOffsetPoint(heatmapY, heatmapX, keypoint, offsets), y = _a.y, x = _a.x;\r\n    return {\r\n        x: part.heatmapX * outputStride + x,\r\n        y: part.heatmapY * outputStride + y\r\n    };\r\n}\r\nexports.getImageCoords = getImageCoords;\r\nfunction squaredDistance(y1, x1, y2, x2) {\r\n    var dy = y2 - y1;\r\n    var dx = x2 - x1;\r\n    return dy * dy + dx * dx;\r\n}\r\nexports.squaredDistance = squaredDistance;\r\nfunction withinNmsRadiusOfCorrespondingPoint(poses, squaredNmsRadius, _a, keypointId) {\r\n    var x = _a.x, y = _a.y;\r\n    return poses.some(function (_a) {\r\n        var keypoints = _a.keypoints;\r\n        return squaredDistance(y, x, keypoints[keypointId].y, keypoints[keypointId].x) <=\r\n            squaredNmsRadius;\r\n    });\r\n}\r\nexports.withinNmsRadiusOfCorrespondingPoint = withinNmsRadiusOfCorrespondingPoint;\r\nvar partIds = \r\n// tslint:disable-next-line: no-unnecessary-type-assertion\r\nconstants_1.COCO_KEYPOINTS.reduce(function (result, jointName, i) {\r\n    result[jointName] = i;\r\n    return result;\r\n}, {});\r\nvar parentChildrenTuples = constants_2.POSE_CHAIN.map(function (_a) {\r\n    var parentJoinName = _a[0], childJoinName = _a[1];\r\n    return ([partIds[parentJoinName], partIds[childJoinName]]);\r\n});\r\nvar parentToChildEdges = parentChildrenTuples.map(function (_a) {\r\n    var childJointId = _a[1];\r\n    return childJointId;\r\n});\r\nvar childToParentEdges = parentChildrenTuples.map(function (_a) {\r\n    var parentJointId = _a[0];\r\n    return parentJointId;\r\n});\r\nfunction clamp(a, min, max) {\r\n    if (a < min) {\r\n        return min;\r\n    }\r\n    if (a > max) {\r\n        return max;\r\n    }\r\n    return a;\r\n}\r\nfunction getStridedIndexNearPoint(point, outputStride, height, width) {\r\n    return {\r\n        y: clamp(Math.round(point.y / outputStride), 0, height - 1),\r\n        x: clamp(Math.round(point.x / outputStride), 0, width - 1)\r\n    };\r\n}\r\nfunction getDisplacement(edgeId, point, displacements) {\r\n    var numEdges = displacements.shape[2] / 2;\r\n    return {\r\n        y: displacements.get(point.y, point.x, edgeId),\r\n        x: displacements.get(point.y, point.x, numEdges + edgeId)\r\n    };\r\n}\r\nfunction addVectors(a, b) {\r\n    return { x: a.x + b.x, y: a.y + b.y };\r\n}\r\nexports.addVectors = addVectors;\r\n/**\r\n * We get a new keypoint along the `edgeId` for the pose instance, assuming\r\n * that the position of the `idSource` part is already known. For this, we\r\n * follow the displacement vector from the source to target part (stored in\r\n * the `i`-t channel of the displacement tensor). The displaced keypoint\r\n * vector is refined using the offset vector by `offsetRefineStep` times.\r\n */\r\nfunction traverseToTargetKeypoint(edgeId, sourceKeypoint, targetKeypointId, scoresBuffer, offsets, outputStride, displacements, offsetRefineStep) {\r\n    if (offsetRefineStep === void 0) { offsetRefineStep = 2; }\r\n    var _a = scoresBuffer.shape, height = _a[0], width = _a[1];\r\n    var point = { y: sourceKeypoint.y, x: sourceKeypoint.x };\r\n    // Nearest neighbor interpolation for the source->target displacements.\r\n    var sourceKeypointIndices = getStridedIndexNearPoint(point, outputStride, height, width);\r\n    var displacement = getDisplacement(edgeId, sourceKeypointIndices, displacements);\r\n    var displacedPoint = addVectors(point, displacement);\r\n    var targetKeypoint = displacedPoint;\r\n    for (var i = 0; i < offsetRefineStep; i++) {\r\n        var targetKeypointIndices = getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\r\n        var offsetPoint = getOffsetPoint(targetKeypointIndices.y, targetKeypointIndices.x, targetKeypointId, offsets);\r\n        targetKeypoint = addVectors({\r\n            x: targetKeypointIndices.x * outputStride,\r\n            y: targetKeypointIndices.y * outputStride\r\n        }, { x: offsetPoint.x, y: offsetPoint.y });\r\n    }\r\n    var targetKeyPointIndices = getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\r\n    var score = scoresBuffer.get(targetKeyPointIndices.y, targetKeyPointIndices.x, targetKeypointId);\r\n    return {\r\n        y: targetKeypoint.y,\r\n        x: targetKeypoint.x,\r\n        name: constants_1.COCO_KEYPOINTS[targetKeypointId],\r\n        score: score\r\n    };\r\n}\r\n/**\r\n * Follows the displacement fields to decode the full pose of the object\r\n * instance given the position of a part that acts as root.\r\n *\r\n * @return An array of decoded keypoints and their scores for a single pose\r\n */\r\nfunction decodePose(root, scores, offsets, outputStride, displacementsFwd, displacementsBwd) {\r\n    var numParts = scores.shape[2];\r\n    var numEdges = parentToChildEdges.length;\r\n    var instanceKeypoints = new Array(numParts);\r\n    // Start a new detection instance at the position of the root.\r\n    var rootPart = root.part, rootScore = root.score;\r\n    var rootPoint = getImageCoords(rootPart, outputStride, offsets);\r\n    instanceKeypoints[rootPart.id] = {\r\n        score: rootScore,\r\n        name: constants_1.COCO_KEYPOINTS[rootPart.id],\r\n        y: rootPoint.y,\r\n        x: rootPoint.x\r\n    };\r\n    // Decode the part positions upwards in the tree, following the backward\r\n    // displacements.\r\n    for (var edge = numEdges - 1; edge >= 0; --edge) {\r\n        var sourceKeypointId = parentToChildEdges[edge];\r\n        var targetKeypointId = childToParentEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsBwd);\r\n        }\r\n    }\r\n    // Decode the part positions downwards in the tree, following the forward\r\n    // displacements.\r\n    for (var edge = 0; edge < numEdges; ++edge) {\r\n        var sourceKeypointId = childToParentEdges[edge];\r\n        var targetKeypointId = parentToChildEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsFwd);\r\n        }\r\n    }\r\n    return instanceKeypoints;\r\n}\r\nexports.decodePose = decodePose;\r\n/* Score the newly proposed object instance without taking into account\r\n * the scores of the parts that overlap with any previously detected\r\n * instance.\r\n */\r\nfunction getInstanceScore(existingPoses, squaredNmsRadius, instanceKeypoints) {\r\n    var notOverlappedKeypointScores = instanceKeypoints.reduce(function (result, _a, keypointId) {\r\n        var y = _a.y, x = _a.x, score = _a.score;\r\n        if (!withinNmsRadiusOfCorrespondingPoint(existingPoses, squaredNmsRadius, { y: y, x: x }, keypointId)) {\r\n            result += score;\r\n        }\r\n        return result;\r\n    }, 0.0);\r\n    return notOverlappedKeypointScores /= instanceKeypoints.length;\r\n}\r\nexports.getInstanceScore = getInstanceScore;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}}],"sources":{"node_modules/@tensorflow-models/pose-detection/posenet/calculators/decode_multiple_poses_util.js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.getInstanceScore = exports.decodePose = exports.addVectors = exports.withinNmsRadiusOfCorrespondingPoint = exports.squaredDistance = exports.getImageCoords = exports.getOffsetPoint = exports.toTensorBuffers3D = void 0;\r\nvar constants_1 = require(\"../../constants\");\r\nvar constants_2 = require(\"../constants\");\r\nfunction toTensorBuffers3D(tensors) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, Promise.all(tensors.map(function (tensor) { return tensor.buffer(); }))];\r\n        });\r\n    });\r\n}\r\nexports.toTensorBuffers3D = toTensorBuffers3D;\r\nfunction getOffsetPoint(y, x, keypoint, offsets) {\r\n    return {\r\n        y: offsets.get(y, x, keypoint),\r\n        x: offsets.get(y, x, keypoint + constants_2.NUM_KEYPOINTS)\r\n    };\r\n}\r\nexports.getOffsetPoint = getOffsetPoint;\r\nfunction getImageCoords(part, outputStride, offsets) {\r\n    var heatmapY = part.heatmapY, heatmapX = part.heatmapX, keypoint = part.id;\r\n    var _a = getOffsetPoint(heatmapY, heatmapX, keypoint, offsets), y = _a.y, x = _a.x;\r\n    return {\r\n        x: part.heatmapX * outputStride + x,\r\n        y: part.heatmapY * outputStride + y\r\n    };\r\n}\r\nexports.getImageCoords = getImageCoords;\r\nfunction squaredDistance(y1, x1, y2, x2) {\r\n    var dy = y2 - y1;\r\n    var dx = x2 - x1;\r\n    return dy * dy + dx * dx;\r\n}\r\nexports.squaredDistance = squaredDistance;\r\nfunction withinNmsRadiusOfCorrespondingPoint(poses, squaredNmsRadius, _a, keypointId) {\r\n    var x = _a.x, y = _a.y;\r\n    return poses.some(function (_a) {\r\n        var keypoints = _a.keypoints;\r\n        return squaredDistance(y, x, keypoints[keypointId].y, keypoints[keypointId].x) <=\r\n            squaredNmsRadius;\r\n    });\r\n}\r\nexports.withinNmsRadiusOfCorrespondingPoint = withinNmsRadiusOfCorrespondingPoint;\r\nvar partIds = \r\n// tslint:disable-next-line: no-unnecessary-type-assertion\r\nconstants_1.COCO_KEYPOINTS.reduce(function (result, jointName, i) {\r\n    result[jointName] = i;\r\n    return result;\r\n}, {});\r\nvar parentChildrenTuples = constants_2.POSE_CHAIN.map(function (_a) {\r\n    var parentJoinName = _a[0], childJoinName = _a[1];\r\n    return ([partIds[parentJoinName], partIds[childJoinName]]);\r\n});\r\nvar parentToChildEdges = parentChildrenTuples.map(function (_a) {\r\n    var childJointId = _a[1];\r\n    return childJointId;\r\n});\r\nvar childToParentEdges = parentChildrenTuples.map(function (_a) {\r\n    var parentJointId = _a[0];\r\n    return parentJointId;\r\n});\r\nfunction clamp(a, min, max) {\r\n    if (a < min) {\r\n        return min;\r\n    }\r\n    if (a > max) {\r\n        return max;\r\n    }\r\n    return a;\r\n}\r\nfunction getStridedIndexNearPoint(point, outputStride, height, width) {\r\n    return {\r\n        y: clamp(Math.round(point.y / outputStride), 0, height - 1),\r\n        x: clamp(Math.round(point.x / outputStride), 0, width - 1)\r\n    };\r\n}\r\nfunction getDisplacement(edgeId, point, displacements) {\r\n    var numEdges = displacements.shape[2] / 2;\r\n    return {\r\n        y: displacements.get(point.y, point.x, edgeId),\r\n        x: displacements.get(point.y, point.x, numEdges + edgeId)\r\n    };\r\n}\r\nfunction addVectors(a, b) {\r\n    return { x: a.x + b.x, y: a.y + b.y };\r\n}\r\nexports.addVectors = addVectors;\r\n/**\r\n * We get a new keypoint along the `edgeId` for the pose instance, assuming\r\n * that the position of the `idSource` part is already known. For this, we\r\n * follow the displacement vector from the source to target part (stored in\r\n * the `i`-t channel of the displacement tensor). The displaced keypoint\r\n * vector is refined using the offset vector by `offsetRefineStep` times.\r\n */\r\nfunction traverseToTargetKeypoint(edgeId, sourceKeypoint, targetKeypointId, scoresBuffer, offsets, outputStride, displacements, offsetRefineStep) {\r\n    if (offsetRefineStep === void 0) { offsetRefineStep = 2; }\r\n    var _a = scoresBuffer.shape, height = _a[0], width = _a[1];\r\n    var point = { y: sourceKeypoint.y, x: sourceKeypoint.x };\r\n    // Nearest neighbor interpolation for the source->target displacements.\r\n    var sourceKeypointIndices = getStridedIndexNearPoint(point, outputStride, height, width);\r\n    var displacement = getDisplacement(edgeId, sourceKeypointIndices, displacements);\r\n    var displacedPoint = addVectors(point, displacement);\r\n    var targetKeypoint = displacedPoint;\r\n    for (var i = 0; i < offsetRefineStep; i++) {\r\n        var targetKeypointIndices = getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\r\n        var offsetPoint = getOffsetPoint(targetKeypointIndices.y, targetKeypointIndices.x, targetKeypointId, offsets);\r\n        targetKeypoint = addVectors({\r\n            x: targetKeypointIndices.x * outputStride,\r\n            y: targetKeypointIndices.y * outputStride\r\n        }, { x: offsetPoint.x, y: offsetPoint.y });\r\n    }\r\n    var targetKeyPointIndices = getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\r\n    var score = scoresBuffer.get(targetKeyPointIndices.y, targetKeyPointIndices.x, targetKeypointId);\r\n    return {\r\n        y: targetKeypoint.y,\r\n        x: targetKeypoint.x,\r\n        name: constants_1.COCO_KEYPOINTS[targetKeypointId],\r\n        score: score\r\n    };\r\n}\r\n/**\r\n * Follows the displacement fields to decode the full pose of the object\r\n * instance given the position of a part that acts as root.\r\n *\r\n * @return An array of decoded keypoints and their scores for a single pose\r\n */\r\nfunction decodePose(root, scores, offsets, outputStride, displacementsFwd, displacementsBwd) {\r\n    var numParts = scores.shape[2];\r\n    var numEdges = parentToChildEdges.length;\r\n    var instanceKeypoints = new Array(numParts);\r\n    // Start a new detection instance at the position of the root.\r\n    var rootPart = root.part, rootScore = root.score;\r\n    var rootPoint = getImageCoords(rootPart, outputStride, offsets);\r\n    instanceKeypoints[rootPart.id] = {\r\n        score: rootScore,\r\n        name: constants_1.COCO_KEYPOINTS[rootPart.id],\r\n        y: rootPoint.y,\r\n        x: rootPoint.x\r\n    };\r\n    // Decode the part positions upwards in the tree, following the backward\r\n    // displacements.\r\n    for (var edge = numEdges - 1; edge >= 0; --edge) {\r\n        var sourceKeypointId = parentToChildEdges[edge];\r\n        var targetKeypointId = childToParentEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsBwd);\r\n        }\r\n    }\r\n    // Decode the part positions downwards in the tree, following the forward\r\n    // displacements.\r\n    for (var edge = 0; edge < numEdges; ++edge) {\r\n        var sourceKeypointId = childToParentEdges[edge];\r\n        var targetKeypointId = parentToChildEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsFwd);\r\n        }\r\n    }\r\n    return instanceKeypoints;\r\n}\r\nexports.decodePose = decodePose;\r\n/* Score the newly proposed object instance without taking into account\r\n * the scores of the parts that overlap with any previously detected\r\n * instance.\r\n */\r\nfunction getInstanceScore(existingPoses, squaredNmsRadius, instanceKeypoints) {\r\n    var notOverlappedKeypointScores = instanceKeypoints.reduce(function (result, _a, keypointId) {\r\n        var y = _a.y, x = _a.x, score = _a.score;\r\n        if (!withinNmsRadiusOfCorrespondingPoint(existingPoses, squaredNmsRadius, { y: y, x: x }, keypointId)) {\r\n            result += score;\r\n        }\r\n        return result;\r\n    }, 0.0);\r\n    return notOverlappedKeypointScores /= instanceKeypoints.length;\r\n}\r\nexports.getInstanceScore = getInstanceScore;\r\n"},"lineCount":215}},"error":null,"hash":"a809d0246ae191c6c59574d5624d1bf1","cacheData":{"env":{}}}