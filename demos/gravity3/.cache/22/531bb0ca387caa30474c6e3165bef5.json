{"id":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","dependencies":[{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity\\package.json","includedInParent":true,"mtime":1669629456377},{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity\\.babelrc","includedInParent":true,"mtime":1669629444948},{"name":"../constants","loc":{"line":20,"column":26},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity\\node_modules\\@tensorflow-models\\pose-detection\\movenet\\crop_utils.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity\\node_modules\\@tensorflow-models\\pose-detection\\constants.js"},{"name":"./constants","loc":{"line":21,"column":26},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity\\node_modules\\@tensorflow-models\\pose-detection\\movenet\\crop_utils.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity\\node_modules\\@tensorflow-models\\pose-detection\\movenet\\constants.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexports.__esModule = true;\r\nexports.initCropRegion = exports.determineNextCropRegion = exports.torsoVisible = void 0;\r\nvar constants_1 = require(\"../constants\");\r\nvar constants_2 = require(\"./constants\");\r\n/**\r\n * Determines whether the torso of a person is visible.\r\n *\r\n * @param keypoints An array of `Keypoint`s associated with a person.\r\n * @param keypointIndexByName A map from keypoint name to index in the keypoints\r\n *     array.\r\n * @return A boolean indicating whether the torso is visible.\r\n */\r\nfunction torsoVisible(keypoints, keypointIndexByName) {\r\n    return ((keypoints[keypointIndexByName['left_hip']].score >\r\n        constants_2.MIN_CROP_KEYPOINT_SCORE ||\r\n        keypoints[keypointIndexByName['right_hip']].score >\r\n            constants_2.MIN_CROP_KEYPOINT_SCORE) &&\r\n        (keypoints[keypointIndexByName['left_shoulder']].score >\r\n            constants_2.MIN_CROP_KEYPOINT_SCORE ||\r\n            keypoints[keypointIndexByName['right_shoulder']].score >\r\n                constants_2.MIN_CROP_KEYPOINT_SCORE));\r\n}\r\nexports.torsoVisible = torsoVisible;\r\n/**\r\n * Calculates the maximum distance from each keypoint to the center location.\r\n * The function returns the maximum distances from the two sets of keypoints:\r\n * full 17 keypoints and 4 torso keypoints. The returned information will be\r\n * used to determine the crop size. See determineCropRegion for more detail.\r\n *\r\n * @param keypoints An array of `Keypoint`s associated with a person.\r\n * @param keypointIndexByName A map from keypoint name to index in the keypoints\r\n *     array.\r\n * @param targetKeypoints Maps from joint names to coordinates.\r\n * @param centerY The Y coordinate of the center of the person.\r\n * @param centerX The X coordinate of the center of the person.\r\n * @return An array containing information about the torso and body range in the\r\n *     image: [maxTorsoYrange, maxTorsoXrange, maxBodyYrange, maxBodyXrange].\r\n */\r\nfunction determineTorsoAndBodyRange(keypoints, keypointIndexByName, targetKeypoints, centerY, centerX) {\r\n    var torsoJoints = ['left_shoulder', 'right_shoulder', 'left_hip', 'right_hip'];\r\n    var maxTorsoYrange = 0.0;\r\n    var maxTorsoXrange = 0.0;\r\n    for (var i = 0; i < torsoJoints.length; i++) {\r\n        var distY = Math.abs(centerY - targetKeypoints[torsoJoints[i]][0]);\r\n        var distX = Math.abs(centerX - targetKeypoints[torsoJoints[i]][1]);\r\n        if (distY > maxTorsoYrange) {\r\n            maxTorsoYrange = distY;\r\n        }\r\n        if (distX > maxTorsoXrange) {\r\n            maxTorsoXrange = distX;\r\n        }\r\n    }\r\n    var maxBodyYrange = 0.0;\r\n    var maxBodyXrange = 0.0;\r\n    for (var _i = 0, _a = Object.keys(targetKeypoints); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        if (keypoints[keypointIndexByName[key]].score < constants_2.MIN_CROP_KEYPOINT_SCORE) {\r\n            continue;\r\n        }\r\n        var distY = Math.abs(centerY - targetKeypoints[key][0]);\r\n        var distX = Math.abs(centerX - targetKeypoints[key][1]);\r\n        if (distY > maxBodyYrange) {\r\n            maxBodyYrange = distY;\r\n        }\r\n        if (distX > maxBodyXrange) {\r\n            maxBodyXrange = distX;\r\n        }\r\n    }\r\n    return [maxTorsoYrange, maxTorsoXrange, maxBodyYrange, maxBodyXrange];\r\n}\r\n/**\r\n * Determines the region to crop the image for the model to run inference on.\r\n * The algorithm uses the detected joints from the previous frame to estimate\r\n * the square region that encloses the full body of the target person and\r\n * centers at the midpoint of two hip joints. The crop size is determined by\r\n * the distances between each joint and the center point.\r\n * When the model is not confident with the four torso joint predictions, the\r\n * function returns a default crop which is the full image padded to square.\r\n *\r\n * @param currentCropRegion The crop region that was used for the current frame.\r\n *     Can be null for the very first frame that is handled by the detector.\r\n * @param keypoints An array of `Keypoint`s associated with a person.\r\n * @param keypointIndexByName A map from keypoint name to index in the keypoints\r\n *     array.\r\n * @param imageSize The size of the image that is being processed.\r\n * @return A `BoundingBox` that contains the new crop region.\r\n */\r\nfunction determineNextCropRegion(currentCropRegion, keypoints, keypointIndexByName, imageSize) {\r\n    var targetKeypoints = {};\r\n    for (var _i = 0, COCO_KEYPOINTS_1 = constants_1.COCO_KEYPOINTS; _i < COCO_KEYPOINTS_1.length; _i++) {\r\n        var key = COCO_KEYPOINTS_1[_i];\r\n        targetKeypoints[key] = [\r\n            keypoints[keypointIndexByName[key]].y * imageSize.height,\r\n            keypoints[keypointIndexByName[key]].x * imageSize.width\r\n        ];\r\n    }\r\n    if (torsoVisible(keypoints, keypointIndexByName)) {\r\n        var centerY = (targetKeypoints['left_hip'][0] + targetKeypoints['right_hip'][0]) / 2;\r\n        var centerX = (targetKeypoints['left_hip'][1] + targetKeypoints['right_hip'][1]) / 2;\r\n        var _a = determineTorsoAndBodyRange(keypoints, keypointIndexByName, targetKeypoints, centerY, centerX), maxTorsoYrange = _a[0], maxTorsoXrange = _a[1], maxBodyYrange = _a[2], maxBodyXrange = _a[3];\r\n        var cropLengthHalf = Math.max(maxTorsoXrange * 1.9, maxTorsoYrange * 1.9, maxBodyYrange * 1.2, maxBodyXrange * 1.2);\r\n        cropLengthHalf = Math.min(cropLengthHalf, Math.max(centerX, imageSize.width - centerX, centerY, imageSize.height - centerY));\r\n        var cropCorner = [centerY - cropLengthHalf, centerX - cropLengthHalf];\r\n        if (cropLengthHalf > Math.max(imageSize.width, imageSize.height) / 2) {\r\n            return initCropRegion(currentCropRegion == null, imageSize);\r\n        }\r\n        else {\r\n            var cropLength = cropLengthHalf * 2;\r\n            return {\r\n                yMin: cropCorner[0] / imageSize.height,\r\n                xMin: cropCorner[1] / imageSize.width,\r\n                yMax: (cropCorner[0] + cropLength) / imageSize.height,\r\n                xMax: (cropCorner[1] + cropLength) / imageSize.width,\r\n                height: (cropCorner[0] + cropLength) / imageSize.height -\r\n                    cropCorner[0] / imageSize.height,\r\n                width: (cropCorner[1] + cropLength) / imageSize.width -\r\n                    cropCorner[1] / imageSize.width\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        return initCropRegion(currentCropRegion == null, imageSize);\r\n    }\r\n}\r\nexports.determineNextCropRegion = determineNextCropRegion;\r\n/**\r\n * Provides initial crop region.\r\n *\r\n * The function provides the initial crop region when the algorithm cannot\r\n * reliably determine the crop region from the previous frame. There are two\r\n * scenarios:\r\n *   1) The very first frame: the function returns the best guess by cropping\r\n *      a square in the middle of the image.\r\n *   2) Not enough reliable keypoints detected from the previous frame: the\r\n *      function pads the full image from both sides to make it a square\r\n *      image.\r\n *\r\n * @param firstFrame A boolean indicating whether we are initializing a crop\r\n *     region for the very first frame.\r\n * @param imageSize The size of the image that is being processed.\r\n * @return A `BoundingBox` that contains the initial crop region.\r\n */\r\nfunction initCropRegion(firstFrame, imageSize) {\r\n    var boxHeight, boxWidth, yMin, xMin;\r\n    if (firstFrame) {\r\n        // If it is the first frame, perform a best guess by making the square\r\n        // crop at the image center to better utilize the image pixels and\r\n        // create higher chance to enter the cropping loop.\r\n        if (imageSize.width > imageSize.height) {\r\n            boxHeight = 1.0;\r\n            boxWidth = imageSize.height / imageSize.width;\r\n            yMin = 0.0;\r\n            xMin = (imageSize.width / 2 - imageSize.height / 2) / imageSize.width;\r\n        }\r\n        else {\r\n            boxHeight = imageSize.width / imageSize.height;\r\n            boxWidth = 1.0;\r\n            yMin = (imageSize.height / 2 - imageSize.width / 2) / imageSize.height;\r\n            xMin = 0.0;\r\n        }\r\n    }\r\n    else {\r\n        // No cropRegion was available from a previous estimatePoses() call, so\r\n        // run the model on the full image with padding on both sides.\r\n        if (imageSize.width > imageSize.height) {\r\n            boxHeight = imageSize.width / imageSize.height;\r\n            boxWidth = 1.0;\r\n            yMin = (imageSize.height / 2 - imageSize.width / 2) / imageSize.height;\r\n            xMin = 0.0;\r\n        }\r\n        else {\r\n            boxHeight = 1.0;\r\n            boxWidth = imageSize.height / imageSize.width;\r\n            yMin = 0.0;\r\n            xMin = (imageSize.width / 2 - imageSize.height / 2) / imageSize.width;\r\n        }\r\n    }\r\n    return {\r\n        yMin: yMin,\r\n        xMin: xMin,\r\n        yMax: yMin + boxHeight,\r\n        xMax: xMin + boxWidth,\r\n        height: boxHeight,\r\n        width: boxWidth\r\n    };\r\n}\r\nexports.initCropRegion = initCropRegion;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}}],"sources":{"node_modules/@tensorflow-models/pose-detection/movenet/crop_utils.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexports.__esModule = true;\r\nexports.initCropRegion = exports.determineNextCropRegion = exports.torsoVisible = void 0;\r\nvar constants_1 = require(\"../constants\");\r\nvar constants_2 = require(\"./constants\");\r\n/**\r\n * Determines whether the torso of a person is visible.\r\n *\r\n * @param keypoints An array of `Keypoint`s associated with a person.\r\n * @param keypointIndexByName A map from keypoint name to index in the keypoints\r\n *     array.\r\n * @return A boolean indicating whether the torso is visible.\r\n */\r\nfunction torsoVisible(keypoints, keypointIndexByName) {\r\n    return ((keypoints[keypointIndexByName['left_hip']].score >\r\n        constants_2.MIN_CROP_KEYPOINT_SCORE ||\r\n        keypoints[keypointIndexByName['right_hip']].score >\r\n            constants_2.MIN_CROP_KEYPOINT_SCORE) &&\r\n        (keypoints[keypointIndexByName['left_shoulder']].score >\r\n            constants_2.MIN_CROP_KEYPOINT_SCORE ||\r\n            keypoints[keypointIndexByName['right_shoulder']].score >\r\n                constants_2.MIN_CROP_KEYPOINT_SCORE));\r\n}\r\nexports.torsoVisible = torsoVisible;\r\n/**\r\n * Calculates the maximum distance from each keypoint to the center location.\r\n * The function returns the maximum distances from the two sets of keypoints:\r\n * full 17 keypoints and 4 torso keypoints. The returned information will be\r\n * used to determine the crop size. See determineCropRegion for more detail.\r\n *\r\n * @param keypoints An array of `Keypoint`s associated with a person.\r\n * @param keypointIndexByName A map from keypoint name to index in the keypoints\r\n *     array.\r\n * @param targetKeypoints Maps from joint names to coordinates.\r\n * @param centerY The Y coordinate of the center of the person.\r\n * @param centerX The X coordinate of the center of the person.\r\n * @return An array containing information about the torso and body range in the\r\n *     image: [maxTorsoYrange, maxTorsoXrange, maxBodyYrange, maxBodyXrange].\r\n */\r\nfunction determineTorsoAndBodyRange(keypoints, keypointIndexByName, targetKeypoints, centerY, centerX) {\r\n    var torsoJoints = ['left_shoulder', 'right_shoulder', 'left_hip', 'right_hip'];\r\n    var maxTorsoYrange = 0.0;\r\n    var maxTorsoXrange = 0.0;\r\n    for (var i = 0; i < torsoJoints.length; i++) {\r\n        var distY = Math.abs(centerY - targetKeypoints[torsoJoints[i]][0]);\r\n        var distX = Math.abs(centerX - targetKeypoints[torsoJoints[i]][1]);\r\n        if (distY > maxTorsoYrange) {\r\n            maxTorsoYrange = distY;\r\n        }\r\n        if (distX > maxTorsoXrange) {\r\n            maxTorsoXrange = distX;\r\n        }\r\n    }\r\n    var maxBodyYrange = 0.0;\r\n    var maxBodyXrange = 0.0;\r\n    for (var _i = 0, _a = Object.keys(targetKeypoints); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        if (keypoints[keypointIndexByName[key]].score < constants_2.MIN_CROP_KEYPOINT_SCORE) {\r\n            continue;\r\n        }\r\n        var distY = Math.abs(centerY - targetKeypoints[key][0]);\r\n        var distX = Math.abs(centerX - targetKeypoints[key][1]);\r\n        if (distY > maxBodyYrange) {\r\n            maxBodyYrange = distY;\r\n        }\r\n        if (distX > maxBodyXrange) {\r\n            maxBodyXrange = distX;\r\n        }\r\n    }\r\n    return [maxTorsoYrange, maxTorsoXrange, maxBodyYrange, maxBodyXrange];\r\n}\r\n/**\r\n * Determines the region to crop the image for the model to run inference on.\r\n * The algorithm uses the detected joints from the previous frame to estimate\r\n * the square region that encloses the full body of the target person and\r\n * centers at the midpoint of two hip joints. The crop size is determined by\r\n * the distances between each joint and the center point.\r\n * When the model is not confident with the four torso joint predictions, the\r\n * function returns a default crop which is the full image padded to square.\r\n *\r\n * @param currentCropRegion The crop region that was used for the current frame.\r\n *     Can be null for the very first frame that is handled by the detector.\r\n * @param keypoints An array of `Keypoint`s associated with a person.\r\n * @param keypointIndexByName A map from keypoint name to index in the keypoints\r\n *     array.\r\n * @param imageSize The size of the image that is being processed.\r\n * @return A `BoundingBox` that contains the new crop region.\r\n */\r\nfunction determineNextCropRegion(currentCropRegion, keypoints, keypointIndexByName, imageSize) {\r\n    var targetKeypoints = {};\r\n    for (var _i = 0, COCO_KEYPOINTS_1 = constants_1.COCO_KEYPOINTS; _i < COCO_KEYPOINTS_1.length; _i++) {\r\n        var key = COCO_KEYPOINTS_1[_i];\r\n        targetKeypoints[key] = [\r\n            keypoints[keypointIndexByName[key]].y * imageSize.height,\r\n            keypoints[keypointIndexByName[key]].x * imageSize.width\r\n        ];\r\n    }\r\n    if (torsoVisible(keypoints, keypointIndexByName)) {\r\n        var centerY = (targetKeypoints['left_hip'][0] + targetKeypoints['right_hip'][0]) / 2;\r\n        var centerX = (targetKeypoints['left_hip'][1] + targetKeypoints['right_hip'][1]) / 2;\r\n        var _a = determineTorsoAndBodyRange(keypoints, keypointIndexByName, targetKeypoints, centerY, centerX), maxTorsoYrange = _a[0], maxTorsoXrange = _a[1], maxBodyYrange = _a[2], maxBodyXrange = _a[3];\r\n        var cropLengthHalf = Math.max(maxTorsoXrange * 1.9, maxTorsoYrange * 1.9, maxBodyYrange * 1.2, maxBodyXrange * 1.2);\r\n        cropLengthHalf = Math.min(cropLengthHalf, Math.max(centerX, imageSize.width - centerX, centerY, imageSize.height - centerY));\r\n        var cropCorner = [centerY - cropLengthHalf, centerX - cropLengthHalf];\r\n        if (cropLengthHalf > Math.max(imageSize.width, imageSize.height) / 2) {\r\n            return initCropRegion(currentCropRegion == null, imageSize);\r\n        }\r\n        else {\r\n            var cropLength = cropLengthHalf * 2;\r\n            return {\r\n                yMin: cropCorner[0] / imageSize.height,\r\n                xMin: cropCorner[1] / imageSize.width,\r\n                yMax: (cropCorner[0] + cropLength) / imageSize.height,\r\n                xMax: (cropCorner[1] + cropLength) / imageSize.width,\r\n                height: (cropCorner[0] + cropLength) / imageSize.height -\r\n                    cropCorner[0] / imageSize.height,\r\n                width: (cropCorner[1] + cropLength) / imageSize.width -\r\n                    cropCorner[1] / imageSize.width\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        return initCropRegion(currentCropRegion == null, imageSize);\r\n    }\r\n}\r\nexports.determineNextCropRegion = determineNextCropRegion;\r\n/**\r\n * Provides initial crop region.\r\n *\r\n * The function provides the initial crop region when the algorithm cannot\r\n * reliably determine the crop region from the previous frame. There are two\r\n * scenarios:\r\n *   1) The very first frame: the function returns the best guess by cropping\r\n *      a square in the middle of the image.\r\n *   2) Not enough reliable keypoints detected from the previous frame: the\r\n *      function pads the full image from both sides to make it a square\r\n *      image.\r\n *\r\n * @param firstFrame A boolean indicating whether we are initializing a crop\r\n *     region for the very first frame.\r\n * @param imageSize The size of the image that is being processed.\r\n * @return A `BoundingBox` that contains the initial crop region.\r\n */\r\nfunction initCropRegion(firstFrame, imageSize) {\r\n    var boxHeight, boxWidth, yMin, xMin;\r\n    if (firstFrame) {\r\n        // If it is the first frame, perform a best guess by making the square\r\n        // crop at the image center to better utilize the image pixels and\r\n        // create higher chance to enter the cropping loop.\r\n        if (imageSize.width > imageSize.height) {\r\n            boxHeight = 1.0;\r\n            boxWidth = imageSize.height / imageSize.width;\r\n            yMin = 0.0;\r\n            xMin = (imageSize.width / 2 - imageSize.height / 2) / imageSize.width;\r\n        }\r\n        else {\r\n            boxHeight = imageSize.width / imageSize.height;\r\n            boxWidth = 1.0;\r\n            yMin = (imageSize.height / 2 - imageSize.width / 2) / imageSize.height;\r\n            xMin = 0.0;\r\n        }\r\n    }\r\n    else {\r\n        // No cropRegion was available from a previous estimatePoses() call, so\r\n        // run the model on the full image with padding on both sides.\r\n        if (imageSize.width > imageSize.height) {\r\n            boxHeight = imageSize.width / imageSize.height;\r\n            boxWidth = 1.0;\r\n            yMin = (imageSize.height / 2 - imageSize.width / 2) / imageSize.height;\r\n            xMin = 0.0;\r\n        }\r\n        else {\r\n            boxHeight = 1.0;\r\n            boxWidth = imageSize.height / imageSize.width;\r\n            yMin = 0.0;\r\n            xMin = (imageSize.width / 2 - imageSize.height / 2) / imageSize.width;\r\n        }\r\n    }\r\n    return {\r\n        yMin: yMin,\r\n        xMin: xMin,\r\n        yMax: yMin + boxHeight,\r\n        xMax: xMin + boxWidth,\r\n        height: boxHeight,\r\n        width: boxWidth\r\n    };\r\n}\r\nexports.initCropRegion = initCropRegion;\r\n"},"lineCount":205}},"error":null,"hash":"00a0facfc90beeb625c7fb60c02c3a00","cacheData":{"env":{}}}