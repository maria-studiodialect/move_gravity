{"id":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","dependencies":[{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\package.json","includedInParent":true,"mtime":1669629456377},{"name":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\.babelrc","includedInParent":true,"mtime":1669629444948},{"name":"@tensorflow/tfjs-converter","loc":{"line":56,"column":21},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow\\tfjs-converter\\dist\\index.js"},{"name":"@tensorflow/tfjs-core","loc":{"line":57,"column":17},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"},{"name":"../shared/calculators/convert_image_to_tensor","loc":{"line":58,"column":40},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\convert_image_to_tensor.js"},{"name":"../shared/calculators/image_utils","loc":{"line":59,"column":28},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\image_utils.js"},{"name":"../shared/calculators/shift_image_value","loc":{"line":60,"column":34},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\shift_image_value.js"},{"name":"./calculators/decode_multiple_poses","loc":{"line":61,"column":38},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\decode_multiple_poses.js"},{"name":"./calculators/decode_single_pose","loc":{"line":62,"column":35},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\decode_single_pose.js"},{"name":"./calculators/flip_poses","loc":{"line":63,"column":27},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\flip_poses.js"},{"name":"./calculators/scale_poses","loc":{"line":64,"column":28},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\calculators\\scale_poses.js"},{"name":"./constants","loc":{"line":65,"column":26},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\constants.js"},{"name":"./detector_utils","loc":{"line":66,"column":31},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector_utils.js"},{"name":"./load_utils","loc":{"line":67,"column":27},"parent":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\detector.js","resolved":"C:\\Users\\maria\\code\\move_pose-detection\\demos\\gravity3\\node_modules\\@tensorflow-models\\pose-detection\\posenet\\load_utils.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.load = void 0;\r\nvar tfconv = require(\"@tensorflow/tfjs-converter\");\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar convert_image_to_tensor_1 = require(\"../shared/calculators/convert_image_to_tensor\");\r\nvar image_utils_1 = require(\"../shared/calculators/image_utils\");\r\nvar shift_image_value_1 = require(\"../shared/calculators/shift_image_value\");\r\nvar decode_multiple_poses_1 = require(\"./calculators/decode_multiple_poses\");\r\nvar decode_single_pose_1 = require(\"./calculators/decode_single_pose\");\r\nvar flip_poses_1 = require(\"./calculators/flip_poses\");\r\nvar scale_poses_1 = require(\"./calculators/scale_poses\");\r\nvar constants_1 = require(\"./constants\");\r\nvar detector_utils_1 = require(\"./detector_utils\");\r\nvar load_utils_1 = require(\"./load_utils\");\r\n/**\r\n * PoseNet detector class.\r\n */\r\nvar PosenetDetector = /** @class */ (function () {\r\n    function PosenetDetector(posenetModel, config) {\r\n        this.posenetModel = posenetModel;\r\n        // validate params.\r\n        var inputShape = this.posenetModel.inputs[0].shape;\r\n        tf.util.assert((inputShape[1] === -1) && (inputShape[2] === -1), function () { return \"Input shape [\".concat(inputShape[1], \", \").concat(inputShape[2], \"] \") +\r\n            \"must both be equal to or -1\"; });\r\n        var validInputResolution = (0, load_utils_1.getValidInputResolutionDimensions)(config.inputResolution, config.outputStride);\r\n        (0, detector_utils_1.assertValidOutputStride)(config.outputStride);\r\n        (0, detector_utils_1.assertValidResolution)(validInputResolution, config.outputStride);\r\n        this.inputResolution = validInputResolution;\r\n        this.outputStride = config.outputStride;\r\n        this.architecture = config.architecture;\r\n    }\r\n    /**\r\n     * Estimates poses for an image or video frame.\r\n     *\r\n     * This does standard ImageNet pre-processing before inferring through the\r\n     * model. The image should pixels should have values [0-255]. It returns a\r\n     * single pose or multiple poses based on the maxPose parameter from the\r\n     * `config`.\r\n     *\r\n     * @param image\r\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\r\n     * image to feed through the network.\r\n     *\r\n     * @param config\r\n     *       maxPoses: Optional. Max number of poses to estimate.\r\n     *       When maxPoses = 1, a single pose is detected, it is usually much more\r\n     *       efficient than maxPoses > 1. When maxPoses > 1, multiple poses are\r\n     *       detected.\r\n     *\r\n     *       flipHorizontal: Optional. Default to false. When image data comes\r\n     *       from camera, the result has to flip horizontally.\r\n     *\r\n     * @return An array of `Pose`s.\r\n     */\r\n    PosenetDetector.prototype.estimatePoses = function (image, estimationConfig) {\r\n        if (estimationConfig === void 0) { estimationConfig = constants_1.SINGLE_PERSON_ESTIMATION_CONFIG; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var config, _a, imageTensor, padding, imageValueShifted, results, offsets, heatmap, displacementFwd, displacementBwd, heatmapScores, poses, pose, imageSize, scaledPoses;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        config = (0, detector_utils_1.validateEstimationConfig)(estimationConfig);\r\n                        if (image == null) {\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        this.maxPoses = config.maxPoses;\r\n                        _a = (0, convert_image_to_tensor_1.convertImageToTensor)(image, {\r\n                            outputTensorSize: this.inputResolution,\r\n                            keepAspectRatio: true,\r\n                            borderMode: 'replicate'\r\n                        }), imageTensor = _a.imageTensor, padding = _a.padding;\r\n                        imageValueShifted = this.architecture === 'ResNet50' ?\r\n                            tf.add(imageTensor, constants_1.RESNET_MEAN) :\r\n                            (0, shift_image_value_1.shiftImageValue)(imageTensor, [-1, 1]);\r\n                        results = this.posenetModel.predict(imageValueShifted);\r\n                        if (this.architecture === 'ResNet50') {\r\n                            offsets = tf.squeeze(results[2], [0]);\r\n                            heatmap = tf.squeeze(results[3], [0]);\r\n                            displacementFwd = tf.squeeze(results[0], [0]);\r\n                            displacementBwd = tf.squeeze(results[1], [0]);\r\n                        }\r\n                        else {\r\n                            offsets = tf.squeeze(results[0], [0]);\r\n                            heatmap = tf.squeeze(results[1], [0]);\r\n                            displacementFwd = tf.squeeze(results[2], [0]);\r\n                            displacementBwd = tf.squeeze(results[3], [0]);\r\n                        }\r\n                        heatmapScores = tf.sigmoid(heatmap);\r\n                        if (!(this.maxPoses === 1)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, (0, decode_single_pose_1.decodeSinglePose)(heatmapScores, offsets, this.outputStride)];\r\n                    case 1:\r\n                        pose = _b.sent();\r\n                        poses = [pose];\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, (0, decode_multiple_poses_1.decodeMultiplePoses)(heatmapScores, offsets, displacementFwd, displacementBwd, this.outputStride, this.maxPoses, config.scoreThreshold, config.nmsRadius)];\r\n                    case 3:\r\n                        poses = _b.sent();\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        imageSize = (0, image_utils_1.getImageSize)(image);\r\n                        scaledPoses = (0, scale_poses_1.scalePoses)(poses, imageSize, this.inputResolution, padding);\r\n                        if (config.flipHorizontal) {\r\n                            scaledPoses = (0, flip_poses_1.flipPosesHorizontal)(scaledPoses, imageSize);\r\n                        }\r\n                        imageTensor.dispose();\r\n                        imageValueShifted.dispose();\r\n                        tf.dispose(results);\r\n                        offsets.dispose();\r\n                        heatmap.dispose();\r\n                        displacementFwd.dispose();\r\n                        displacementBwd.dispose();\r\n                        heatmapScores.dispose();\r\n                        return [2 /*return*/, scaledPoses];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PosenetDetector.prototype.dispose = function () {\r\n        this.posenetModel.dispose();\r\n    };\r\n    PosenetDetector.prototype.reset = function () {\r\n        // No-op. There's no global state.\r\n    };\r\n    return PosenetDetector;\r\n}());\r\n/**\r\n * Loads the PoseNet model instance from a checkpoint, with the ResNet\r\n * or MobileNet architecture. The model to be loaded is configurable using the\r\n * config dictionary ModelConfig. Please find more details in the\r\n * documentation of the ModelConfig.\r\n *\r\n * @param config ModelConfig dictionary that contains parameters for\r\n * the PoseNet loading process. Please find more details of each parameters\r\n * in the documentation of the ModelConfig interface. The predefined\r\n * `MOBILENET_V1_CONFIG` and `RESNET_CONFIG` can also be used as references\r\n * for defining your customized config.\r\n */\r\nfunction load(modelConfig) {\r\n    if (modelConfig === void 0) { modelConfig = constants_1.MOBILENET_V1_CONFIG; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var config, defaultUrl_1, model_1, defaultUrl, model;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    config = (0, detector_utils_1.validateModelConfig)(modelConfig);\r\n                    if (!(config.architecture === 'ResNet50')) return [3 /*break*/, 2];\r\n                    defaultUrl_1 = (0, load_utils_1.resNet50Checkpoint)(config.outputStride, config.quantBytes);\r\n                    return [4 /*yield*/, tfconv.loadGraphModel(config.modelUrl || defaultUrl_1)];\r\n                case 1:\r\n                    model_1 = _a.sent();\r\n                    return [2 /*return*/, new PosenetDetector(model_1, config)];\r\n                case 2:\r\n                    defaultUrl = (0, load_utils_1.mobileNetCheckpoint)(config.outputStride, config.multiplier, config.quantBytes);\r\n                    return [4 /*yield*/, tfconv.loadGraphModel(config.modelUrl || defaultUrl)];\r\n                case 3:\r\n                    model = _a.sent();\r\n                    return [2 /*return*/, new PosenetDetector(model, config)];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.load = load;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@tensorflow-models/pose-detection/posenet/detector.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}}],"sources":{"node_modules/@tensorflow-models/pose-detection/posenet/detector.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.load = void 0;\r\nvar tfconv = require(\"@tensorflow/tfjs-converter\");\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar convert_image_to_tensor_1 = require(\"../shared/calculators/convert_image_to_tensor\");\r\nvar image_utils_1 = require(\"../shared/calculators/image_utils\");\r\nvar shift_image_value_1 = require(\"../shared/calculators/shift_image_value\");\r\nvar decode_multiple_poses_1 = require(\"./calculators/decode_multiple_poses\");\r\nvar decode_single_pose_1 = require(\"./calculators/decode_single_pose\");\r\nvar flip_poses_1 = require(\"./calculators/flip_poses\");\r\nvar scale_poses_1 = require(\"./calculators/scale_poses\");\r\nvar constants_1 = require(\"./constants\");\r\nvar detector_utils_1 = require(\"./detector_utils\");\r\nvar load_utils_1 = require(\"./load_utils\");\r\n/**\r\n * PoseNet detector class.\r\n */\r\nvar PosenetDetector = /** @class */ (function () {\r\n    function PosenetDetector(posenetModel, config) {\r\n        this.posenetModel = posenetModel;\r\n        // validate params.\r\n        var inputShape = this.posenetModel.inputs[0].shape;\r\n        tf.util.assert((inputShape[1] === -1) && (inputShape[2] === -1), function () { return \"Input shape [\".concat(inputShape[1], \", \").concat(inputShape[2], \"] \") +\r\n            \"must both be equal to or -1\"; });\r\n        var validInputResolution = (0, load_utils_1.getValidInputResolutionDimensions)(config.inputResolution, config.outputStride);\r\n        (0, detector_utils_1.assertValidOutputStride)(config.outputStride);\r\n        (0, detector_utils_1.assertValidResolution)(validInputResolution, config.outputStride);\r\n        this.inputResolution = validInputResolution;\r\n        this.outputStride = config.outputStride;\r\n        this.architecture = config.architecture;\r\n    }\r\n    /**\r\n     * Estimates poses for an image or video frame.\r\n     *\r\n     * This does standard ImageNet pre-processing before inferring through the\r\n     * model. The image should pixels should have values [0-255]. It returns a\r\n     * single pose or multiple poses based on the maxPose parameter from the\r\n     * `config`.\r\n     *\r\n     * @param image\r\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\r\n     * image to feed through the network.\r\n     *\r\n     * @param config\r\n     *       maxPoses: Optional. Max number of poses to estimate.\r\n     *       When maxPoses = 1, a single pose is detected, it is usually much more\r\n     *       efficient than maxPoses > 1. When maxPoses > 1, multiple poses are\r\n     *       detected.\r\n     *\r\n     *       flipHorizontal: Optional. Default to false. When image data comes\r\n     *       from camera, the result has to flip horizontally.\r\n     *\r\n     * @return An array of `Pose`s.\r\n     */\r\n    PosenetDetector.prototype.estimatePoses = function (image, estimationConfig) {\r\n        if (estimationConfig === void 0) { estimationConfig = constants_1.SINGLE_PERSON_ESTIMATION_CONFIG; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var config, _a, imageTensor, padding, imageValueShifted, results, offsets, heatmap, displacementFwd, displacementBwd, heatmapScores, poses, pose, imageSize, scaledPoses;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        config = (0, detector_utils_1.validateEstimationConfig)(estimationConfig);\r\n                        if (image == null) {\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        this.maxPoses = config.maxPoses;\r\n                        _a = (0, convert_image_to_tensor_1.convertImageToTensor)(image, {\r\n                            outputTensorSize: this.inputResolution,\r\n                            keepAspectRatio: true,\r\n                            borderMode: 'replicate'\r\n                        }), imageTensor = _a.imageTensor, padding = _a.padding;\r\n                        imageValueShifted = this.architecture === 'ResNet50' ?\r\n                            tf.add(imageTensor, constants_1.RESNET_MEAN) :\r\n                            (0, shift_image_value_1.shiftImageValue)(imageTensor, [-1, 1]);\r\n                        results = this.posenetModel.predict(imageValueShifted);\r\n                        if (this.architecture === 'ResNet50') {\r\n                            offsets = tf.squeeze(results[2], [0]);\r\n                            heatmap = tf.squeeze(results[3], [0]);\r\n                            displacementFwd = tf.squeeze(results[0], [0]);\r\n                            displacementBwd = tf.squeeze(results[1], [0]);\r\n                        }\r\n                        else {\r\n                            offsets = tf.squeeze(results[0], [0]);\r\n                            heatmap = tf.squeeze(results[1], [0]);\r\n                            displacementFwd = tf.squeeze(results[2], [0]);\r\n                            displacementBwd = tf.squeeze(results[3], [0]);\r\n                        }\r\n                        heatmapScores = tf.sigmoid(heatmap);\r\n                        if (!(this.maxPoses === 1)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, (0, decode_single_pose_1.decodeSinglePose)(heatmapScores, offsets, this.outputStride)];\r\n                    case 1:\r\n                        pose = _b.sent();\r\n                        poses = [pose];\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, (0, decode_multiple_poses_1.decodeMultiplePoses)(heatmapScores, offsets, displacementFwd, displacementBwd, this.outputStride, this.maxPoses, config.scoreThreshold, config.nmsRadius)];\r\n                    case 3:\r\n                        poses = _b.sent();\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        imageSize = (0, image_utils_1.getImageSize)(image);\r\n                        scaledPoses = (0, scale_poses_1.scalePoses)(poses, imageSize, this.inputResolution, padding);\r\n                        if (config.flipHorizontal) {\r\n                            scaledPoses = (0, flip_poses_1.flipPosesHorizontal)(scaledPoses, imageSize);\r\n                        }\r\n                        imageTensor.dispose();\r\n                        imageValueShifted.dispose();\r\n                        tf.dispose(results);\r\n                        offsets.dispose();\r\n                        heatmap.dispose();\r\n                        displacementFwd.dispose();\r\n                        displacementBwd.dispose();\r\n                        heatmapScores.dispose();\r\n                        return [2 /*return*/, scaledPoses];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PosenetDetector.prototype.dispose = function () {\r\n        this.posenetModel.dispose();\r\n    };\r\n    PosenetDetector.prototype.reset = function () {\r\n        // No-op. There's no global state.\r\n    };\r\n    return PosenetDetector;\r\n}());\r\n/**\r\n * Loads the PoseNet model instance from a checkpoint, with the ResNet\r\n * or MobileNet architecture. The model to be loaded is configurable using the\r\n * config dictionary ModelConfig. Please find more details in the\r\n * documentation of the ModelConfig.\r\n *\r\n * @param config ModelConfig dictionary that contains parameters for\r\n * the PoseNet loading process. Please find more details of each parameters\r\n * in the documentation of the ModelConfig interface. The predefined\r\n * `MOBILENET_V1_CONFIG` and `RESNET_CONFIG` can also be used as references\r\n * for defining your customized config.\r\n */\r\nfunction load(modelConfig) {\r\n    if (modelConfig === void 0) { modelConfig = constants_1.MOBILENET_V1_CONFIG; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var config, defaultUrl_1, model_1, defaultUrl, model;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    config = (0, detector_utils_1.validateModelConfig)(modelConfig);\r\n                    if (!(config.architecture === 'ResNet50')) return [3 /*break*/, 2];\r\n                    defaultUrl_1 = (0, load_utils_1.resNet50Checkpoint)(config.outputStride, config.quantBytes);\r\n                    return [4 /*yield*/, tfconv.loadGraphModel(config.modelUrl || defaultUrl_1)];\r\n                case 1:\r\n                    model_1 = _a.sent();\r\n                    return [2 /*return*/, new PosenetDetector(model_1, config)];\r\n                case 2:\r\n                    defaultUrl = (0, load_utils_1.mobileNetCheckpoint)(config.outputStride, config.multiplier, config.quantBytes);\r\n                    return [4 /*yield*/, tfconv.loadGraphModel(config.modelUrl || defaultUrl)];\r\n                case 3:\r\n                    model = _a.sent();\r\n                    return [2 /*return*/, new PosenetDetector(model, config)];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.load = load;\r\n"},"lineCount":216}},"error":null,"hash":"f6805c3e833284083ec56ee16ac60df8","cacheData":{"env":{}}}